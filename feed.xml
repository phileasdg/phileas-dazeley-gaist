<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <title>Phileas Dazeley-Gaist</title>
    <link href="https://phileasdg.github.io/phileas-dazeley-gaist/feed.xml" rel="self" />
    <link href="https://phileasdg.github.io/phileas-dazeley-gaist" />
    <updated>2023-01-26T16:14:06-05:00</updated>
    <author>
        <name>Phileas Dazeley-Gaist</name>
    </author>
    <id>https://phileasdg.github.io/phileas-dazeley-gaist</id>

    <entry>
        <title>Featured in The Wrack Line (NOAA)</title>
        <author>
            <name>Phileas Dazeley-Gaist</name>
        </author>
        <link href="https://phileasdg.github.io/phileas-dazeley-gaist/featured-in-the-wrack-line-noaa/"/>
        <id>https://phileasdg.github.io/phileas-dazeley-gaist/featured-in-the-wrack-line-noaa/</id>
        <media:content url="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/unnamed-2.png" medium="image" />
            <category term="Undergraduate work"/>

        <updated>2022-12-18T12:14:44-05:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/unnamed-2.png" alt="" />
                    Just a few days ago, I was featured in The Wrack Line,&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/unnamed-2.png" class="type:primaryImage" alt="" /></p>
                <div style="overflow: hidden;">
<div style="margin: 0; padding: 0; width: 100%!important;">
<p>Just a few days ago, I was featured in The Wrack Line, NOAA's Marine Debris Monitoring and Assessment Project newsletter, for my work as an undergraduate data science intern with the MDMAP team over this last summer. This was a really amazing internship, and I definitely plan to blog about it here sometime (I have a lot to say about bow ties in geopolygons), but I'm holding off for now to complete other projects.</p>
<p>As a Managing Marine Debris Data for Community Use NOAA data science intern, I worked on many exciting projects ranging from data wrangling marine debris survey data to performing quality control checks on the <a href="https://mdmap.orr.noaa.gov/">MDMAP interactive map and open database</a>. One of my favourite tasks was helping to fix errors in beach site geopolygon data, which when poorly defined displayed crossing paths (bow ties). It was a challenging problem, but I found it incredibly rewarding to apply my skills in maths, R, and data analysis to find solutions! In the end, my approach used a mix of linear algebra, calculus, trig, GIS, and tidyverse to correct polygons, accounting for the orientation of the section of their corresponding coastline and the indices of the crossing edges.<br><br>Working on this project also gave me the opportunity to explore new visualisations, many of which I had to design from scratch to help visualise aspects of the problem at hand, and to help communicate my solutions. For me, this was a great way to see the impact of my work and understand the value of the data I was working with. <br><br>Overall, my time as a NOAA MDMAP intern was incredibly valuable. I learned so much, worked with a dedicated team, and had the chance to make a meaningful contribution to work I find important and compelling. I am grateful for the experience and the opportunities it provided. Working with a US federal scientific institution like NOAA was a truly special experience, and I am so thankful for the valuable lessons and skills I gained during my time as an intern.</p>
<p>Anyway... I've embedded the newsletter here in case you'd like to read it, I hope you enjoy!</p>
<h2>The Wrack Line: Fall 2022</h2>
<figure class="post__image align-center"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/unnamed.png" alt="" width="600" height="300" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed-md.png 768w"></figure>
<p><em style="color: #3a3a3a; font-family: 'Helvetica Neue', Helvetica, Helvetica, Arial, sans-serif; font-size: 14px; font-weight: var(--font-weight-normal);">The Wrack Line is a newsletter for partners, participants, and data users of NOAA's Marine Debris Monitoring and Assessment Project (MDMAP).Thank you for reading! </em></p>
</div>
<div style="margin: 0; padding: 0; width: 100%!important;">
<div class="m_-2332561867194686856govd_hr" style="padding: 0px;">
<div> </div>
<div class="m_-2332561867194686856govd_hr_inner"><span style="color: #0688cb; font-family: helvetica; font-size: 21px; letter-spacing: var(--letter-spacing);">Mobile Data Entry with Internet Access</span></div>
<div>
<table style="border-collapse: collapse; width: 100%;" border="1">
<tbody>
<tr>
<td style="width: 49.9288%;"><figure class="post__image"><img loading="lazy"  style="width: 297px; height: 223px; float: left;" src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24//unnamed.jpg" alt="" width="297" height="223" align="left" hspace="7" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24//responsive/unnamed-xs.jpg 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24//responsive/unnamed-sm.jpg 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24//responsive/unnamed-md.jpg 768w"></figure></td>
<td style="width: 49.9288%;">
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left">For those who would prefer entering data on the beach rather than using datasheets, the <a href="https://lnks.gd/l/eyJhbGciOiJIUzI1NiJ9.eyJidWxsZXRpbl9saW5rX2lkIjoxMDAsInVyaSI6ImJwMjpjbGljayIsImJ1bGxldGluX2lkIjoiMjAyMjEyMTMuNjgxMjA1NTEiLCJ1cmwiOiJodHRwczovL21kbWFwLm9yci5ub2FhLmdvdi8_dXRtX21lZGl1bT1lbWFpbCZ1dG1fc291cmNlPUdvdkRlbGl2ZXJ5In0.g-M57zxaQL3etCEqHgYRwtexk3W25i6g9LpGhF8HXyk/s/2580731833/br/150277375178-l" title="data entry" rel="noopener" style="color: #ec3f13; text-decoration: underline;" target="_blank" data-saferedirecturl="https://www.google.com/url?hl=en&amp;q=https://lnks.gd/l/eyJhbGciOiJIUzI1NiJ9.eyJidWxsZXRpbl9saW5rX2lkIjoxMDAsInVyaSI6ImJwMjpjbGljayIsImJ1bGxldGluX2lkIjoiMjAyMjEyMTMuNjgxMjA1NTEiLCJ1cmwiOiJodHRwczovL21kbWFwLm9yci5ub2FhLmdvdi8_dXRtX21lZGl1bT1lbWFpbCZ1dG1fc291cmNlPUdvdkRlbGl2ZXJ5In0.g-M57zxaQL3etCEqHgYRwtexk3W25i6g9LpGhF8HXyk/s/2580731833/br/150277375178-l&amp;source=gmail&amp;ust=1671464435964000&amp;usg=AOvVaw2Xtk77Wmav-XFYuMAU8cps">data entry website</a> works on any device but does require internet access.</p>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left"> </p>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left">At left: Elena Aguilar, graduate student with San Diego State University, tests mobile MDMAP data entry (Credit: NOAA).</p>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="m_-2332561867194686856govd_hr" style="padding: 0px;">
<div class="m_-2332561867194686856govd_hr_inner"><span style="color: #0688cb; font-family: helvetica; font-size: 21px; letter-spacing: var(--letter-spacing);">With Student Help, All MDMAP Data in One Place</span></div>
<div>
<table style="border-collapse: collapse; width: 100%;" border="1">
<tbody>
<tr>
<td style="width: 49.9288%;"><figure class="post__image"><img loading="lazy"  style="width: 296px; height: 222px; float: left;" src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24//unnamed2.jpg" alt="" width="296" height="222" align="left" hspace="7" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24//responsive/unnamed2-xs.jpg 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24//responsive/unnamed2-sm.jpg 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24//responsive/unnamed2-md.jpg 768w"></figure></td>
<td style="width: 49.9288%;">
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left">We are so excited to now have the full MDMAP dataset available in one place! If you collected data using the accumulation method, those data can now be viewed alongside other MDMAP data in the visualizations and downloaded via data exports in a single spreadsheet. This integration represents over 4,400 surveys. </p>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left"> </p>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left">This effort was supported by summer intern Phileas Dazeley-Gaist. Phileas is student at College of the Atlantic. Over the course of 10 weeks, they applied and honed their coding skills by helping enter data, performing quality control checks, and cleaning the MDMAP dataset. Of their internship experience, Phileas shared that they "most enjoyed developing visualizations of the data to better explore problems and communicate  solutions, all while making a  meaningful contribution to important and compelling work." Thank you Phileas!</p>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left"> </p>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left">Above: Phileas is at home in front of screens full of code and data (Credit: Phileas Dazely-Gaist).</p>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="m_-2332561867194686856govd_hr" style="padding: 0px;"><span style="color: #0688cb; font-family: helvetica; font-size: 21px; letter-spacing: var(--letter-spacing); font-weight: var(--font-weight-normal);">MDMAP Data in Action</span></div>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left">We are often asked how MDMAP data are used, so we posted <a href="https://lnks.gd/l/eyJhbGciOiJIUzI1NiJ9.eyJidWxsZXRpbl9saW5rX2lkIjoxMDgsInVyaSI6ImJwMjpjbGljayIsImJ1bGxldGluX2lkIjoiMjAyMjEyMTMuNjgxMjA1NTEiLCJ1cmwiOiJodHRwczovL21hcmluZWRlYnJpcy5ub2FhLmdvdi9tb25pdG9yaW5nL2hvdy1hcmUtbWRtYXAtZGF0YS11c2VkP3V0bV9tZWRpdW09ZW1haWwmdXRtX3NvdXJjZT1Hb3ZEZWxpdmVyeSJ9.jSEFEIllbcnDVzSOXpYuIu9q9JAzcDQd9YWnhOB3D5s/s/2580731833/br/150277375178-l" style="color: #ec3f13; text-decoration: underline;" target="_blank" data-saferedirecturl="https://www.google.com/url?hl=en&amp;q=https://lnks.gd/l/eyJhbGciOiJIUzI1NiJ9.eyJidWxsZXRpbl9saW5rX2lkIjoxMDgsInVyaSI6ImJwMjpjbGljayIsImJ1bGxldGluX2lkIjoiMjAyMjEyMTMuNjgxMjA1NTEiLCJ1cmwiOiJodHRwczovL21hcmluZWRlYnJpcy5ub2FhLmdvdi9tb25pdG9yaW5nL2hvdy1hcmUtbWRtYXAtZGF0YS11c2VkP3V0bV9tZWRpdW09ZW1haWwmdXRtX3NvdXJjZT1Hb3ZEZWxpdmVyeSJ9.jSEFEIllbcnDVzSOXpYuIu9q9JAzcDQd9YWnhOB3D5s/s/2580731833/br/150277375178-l&amp;source=gmail&amp;ust=1671464435964000&amp;usg=AOvVaw2RAVb8T5gKTafOcEWRJdb2" rel="noopener">a list of examples here</a>.</p>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left">Each newsletter, we also feature at least one recent use of the data.</p>
<table style="border-collapse: collapse; width: 100%;" border="1">
<tbody>
<tr>
<td style="width: 49.9288%;">
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left"><strong><em>MDMAP at the 7th International Marine Debris Conference</em></strong></p>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left"> </p>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left">Hosted in Busan, South Korea, from September 18-23, 2022, the 7th International Marine Debris Conference brought together policy makers, researchers, advocacy leaders, and educators from around the world to discuss new developments and future directions for addressing marine debris. Monitoring was the focus of 17 dedicated sessions. The importance of and need for consistent, harmonized data for tracking and informing prevention progress was a common message throughout the conference.</p>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left">Results from MDMAP made appearances in at least six talks, including:</p>
</td>
<td style="width: 49.9288%;"><figure class="post__image"><img loading="lazy"  style="width: 348px; height: 223px; float: right;" src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/unnamed5.jpg" alt="" width="348" height="223" align="right" hspace="7" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed5-xs.jpg 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed5-sm.jpg 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed5-md.jpg 768w"></figure></td>
</tr>
</tbody>
</table>
<ul>
<li style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;"><em>NOAA’s Marine Debris Monitoring and Assessment Project: Adapting for Local to National Scales of Inference and Impact </em>(Hillary Burgess, NOAA Marine Debris Program) during session<em> Stories and Lessons from Around the World: How Monitoring Can Help Inform Actions to Tackle Marine Litter</em></li>
<li style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" aria-level="1"><em>Inventories of Marine Litter and Meso Plastics, a Reliable Method for Determining Pollution in Marine-coastal Ecosystems</em> (Denise Delvalle-Borrero, Technological University of Panama) during session <em>Stories and Lessons from Around the World: How Monitoring Can Help Inform Actions to Tackle Marine Litter</em></li>
<li style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" aria-level="1"><em>Using Scientific Knowledge to Influence Public Policy in the United States</em> (Nancy Wallace, NOAA MDP) during session <em>Science to Policy</em></li>
<li style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" aria-level="1"><em>How We Count Counts: Examining Influences on Detection during Shoreline Surveys of Marine Debris </em>(Hillary Burgess, NOAA MDP) during session <em>Design, Statistical Analyses and Methods Standardization for Macrolitter Surveys</em></li>
<li style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" aria-level="1"><em>Progress Toward Meaningful Monitoring: Confronting the Challenges of Survey Design and Reporting</em>  (Amy V. Uhrin, NOAA MDP) during session <em>The future of the Science of Monitoring</em></li>
<li style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" aria-level="1"><em>Decline in Marine Debris Abundance on Hawaiian Shores Noted through Observational Data and Interpreted using a Dynamic Model of Pacific Ocean Circulation</em> (Carl Berg, Kauai Chapter of Surfrider Foundation) during session <em>Integrated Marine Debris Observing System </em></li>
</ul>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left">Above: Marine Debris Program Science Team Staff at the 7th International Marine Debris Conference from left to right: Carlie Herring (Research Coordinator), Amy V. Uhrin (Chief Scientist), and Hillary Burgess (Monitoring Coordinator) (Credit: NOAA).</p>
<table style="border-collapse: collapse; width: 100%;" border="1">
<tbody>
<tr>
<td style="width: 49.9288%;"><a href="https://lnks.gd/l/eyJhbGciOiJIUzI1NiJ9.eyJidWxsZXRpbl9saW5rX2lkIjoxMDksInVyaSI6ImJwMjpjbGljayIsImJ1bGxldGluX2lkIjoiMjAyMjEyMTMuNjgxMjA1NTEiLCJ1cmwiOiJodHRwczovL3d3dy5zY2llbmNlZGlyZWN0LmNvbS9zY2llbmNlL2FydGljbGUvcGlpL1MwMjY5NzQ5MTIyMDEwNzY0P3V0bV9tZWRpdW09ZW1haWwmdXRtX3NvdXJjZT1Hb3ZEZWxpdmVyeSJ9.OTCKRtQ4wW5pYj8mWgivxFjSuAxU5qowzI8IzLUFcZM/s/2580731833/br/150277375178-l" rel="noopener noreferrer" style="color: #1d5782; text-decoration: underline;" target="_blank" data-saferedirecturl="https://www.google.com/url?hl=en&amp;q=https://lnks.gd/l/eyJhbGciOiJIUzI1NiJ9.eyJidWxsZXRpbl9saW5rX2lkIjoxMDksInVyaSI6ImJwMjpjbGljayIsImJ1bGxldGluX2lkIjoiMjAyMjEyMTMuNjgxMjA1NTEiLCJ1cmwiOiJodHRwczovL3d3dy5zY2llbmNlZGlyZWN0LmNvbS9zY2llbmNlL2FydGljbGUvcGlpL1MwMjY5NzQ5MTIyMDEwNzY0P3V0bV9tZWRpdW09ZW1haWwmdXRtX3NvdXJjZT1Hb3ZEZWxpdmVyeSJ9.OTCKRtQ4wW5pYj8mWgivxFjSuAxU5qowzI8IzLUFcZM/s/2580731833/br/150277375178-l&amp;source=gmail&amp;ust=1671464435964000&amp;usg=AOvVaw19jdQtK7QmHcewsE98zyuo"><figure class="post__image"><img loading="lazy"  style="width: 389px; height: 220px; float: left;" src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/unnamed6.jpg" alt="" width="389" height="220" align="left" hspace="7" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed6-xs.jpg 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed6-sm.jpg 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed6-md.jpg 768w"></figure></a></td>
<td style="width: 49.9288%;">
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left"><strong><em>New publication on Shoreline Monitoring</em></strong></p>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left"> </p>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left">A  <a href="https://lnks.gd/l/eyJhbGciOiJIUzI1NiJ9.eyJidWxsZXRpbl9saW5rX2lkIjoxMTAsInVyaSI6ImJwMjpjbGljayIsImJ1bGxldGluX2lkIjoiMjAyMjEyMTMuNjgxMjA1NTEiLCJ1cmwiOiJodHRwczovL3d3dy5zY2llbmNlZGlyZWN0LmNvbS9zY2llbmNlL2FydGljbGUvcGlpL1MwMjY5NzQ5MTIyMDEwNzY0P3V0bV9tZWRpdW09ZW1haWwmdXRtX3NvdXJjZT1Hb3ZEZWxpdmVyeSJ9.wwnzjEKUiRfSm4anacmpLSAZPllZz0uQEsG0FeX1cWM/s/2580731833/br/150277375178-l" rel="noopener" style="color: #ec3f13; text-decoration: underline;" target="_blank" data-saferedirecturl="https://www.google.com/url?hl=en&amp;q=https://lnks.gd/l/eyJhbGciOiJIUzI1NiJ9.eyJidWxsZXRpbl9saW5rX2lkIjoxMTAsInVyaSI6ImJwMjpjbGljayIsImJ1bGxldGluX2lkIjoiMjAyMjEyMTMuNjgxMjA1NTEiLCJ1cmwiOiJodHRwczovL3d3dy5zY2llbmNlZGlyZWN0LmNvbS9zY2llbmNlL2FydGljbGUvcGlpL1MwMjY5NzQ5MTIyMDEwNzY0P3V0bV9tZWRpdW09ZW1haWwmdXRtX3NvdXJjZT1Hb3ZEZWxpdmVyeSJ9.wwnzjEKUiRfSm4anacmpLSAZPllZz0uQEsG0FeX1cWM/s/2580731833/br/150277375178-l&amp;source=gmail&amp;ust=1671464435964000&amp;usg=AOvVaw2bPe6wk7O_um7GBxKpBigc">new publication</a> in the journal Environmental Pollution entitled “Towards a North Pacific long-term monitoring program for ocean plastic pollution: A systematic review and recommendations for shorelines” reviews published data (including from MDMAP!) on shoreline debris abundances a<a href="https://lnks.gd/l/eyJhbGciOiJIUzI1NiJ9.eyJidWxsZXRpbl9saW5rX2lkIjoxMTEsInVyaSI6ImJwMjpjbGljayIsImJ1bGxldGluX2lkIjoiMjAyMjEyMTMuNjgxMjA1NTEiLCJ1cmwiOiJodHRwczovL3d3dy5zY2llbmNlZGlyZWN0LmNvbS9zY2llbmNlL2FydGljbGUvcGlpL1MwMjY5NzQ5MTIyMDEwNzY0P3V0bV9tZWRpdW09ZW1haWwmdXRtX3NvdXJjZT1Hb3ZEZWxpdmVyeSJ9.jBi2sJtTtZMISi5fn5nt-KpqLqcV3NN3RYCi8N3bXSY/s/2580731833/br/150277375178-l" rel="noopener" style="color: #ec3f13; text-decoration: underline;" target="_blank" data-saferedirecturl="https://www.google.com/url?hl=en&amp;q=https://lnks.gd/l/eyJhbGciOiJIUzI1NiJ9.eyJidWxsZXRpbl9saW5rX2lkIjoxMTEsInVyaSI6ImJwMjpjbGljayIsImJ1bGxldGluX2lkIjoiMjAyMjEyMTMuNjgxMjA1NTEiLCJ1cmwiOiJodHRwczovL3d3dy5zY2llbmNlZGlyZWN0LmNvbS9zY2llbmNlL2FydGljbGUvcGlpL1MwMjY5NzQ5MTIyMDEwNzY0P3V0bV9tZWRpdW09ZW1haWwmdXRtX3NvdXJjZT1Hb3ZEZWxpdmVyeSJ9.jBi2sJtTtZMISi5fn5nt-KpqLqcV3NN3RYCi8N3bXSY/s/2580731833/br/150277375178-l&amp;source=gmail&amp;ust=1671464435965000&amp;usg=AOvVaw2BYzAad9g-USJPi0YKAJep"></a>cross the North Pacific Ocean and makes recommendations for harmonizing monitoring efforts in this region. NOAA Marine Debris Program staff Amy V. Uhrin and Hillary Burgess are co-authors together with researchers from the Korea Marine Litter Institute, the Republic of Korea Naval Academy, and NOAA National Marine Fisheries Service Southeast Fisheries Science Center. The research team examined data and methods from 81 papers documenting shoreline debris in the North Pacific. </p>
</td>
</tr>
</tbody>
</table>
<div class="m_-2332561867194686856govd_hr" style="padding: 0px;">
<div class="m_-2332561867194686856govd_hr_inner"><span style="color: #0688cb; font-family: helvetica; font-size: 21px; letter-spacing: var(--letter-spacing);">Data Visualizations: Time Series</span></div>
</div>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left">Is the amount of marine debris changing over time?  Use interactive time series graphs to find out! These graphs display the number of marine debris items per month per 100 meters of shoreline. Data can be either an individual site or a group of sites that you have selected.</p>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left"> </p>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left"><em><strong>For a single site: </strong></em>Click "visualize" from any MDMAP site page. If more than one survey protocol has been used at that site, they will appear on the same graph as separate series.</p>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left"> </p>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left"><em><strong>Averaged among a selection of sites:</strong> </em>Click "visualize" from the MDMAP home page. The default view when not logged-in is all MDMAP data. When logged-in, the default view is "my sites." </p>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left"> </p>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left">Filter results using the search and filter bar to the left. Options include site names, states, countries, or participating organizations that survey multiple sites. You can add multiple filters. Remove filters using the "x" next to the filter. Try searching for "Galveston Bay Foundation" or "Texas" then click "<a href="https://lnks.gd/l/eyJhbGciOiJIUzI1NiJ9.eyJidWxsZXRpbl9saW5rX2lkIjoxMTIsInVyaSI6ImJwMjpjbGljayIsImJ1bGxldGluX2lkIjoiMjAyMjEyMTMuNjgxMjA1NTEiLCJ1cmwiOiJodHRwczovL21kbWFwLm9yci5ub2FhLmdvdi92aXN1YWxpemU_dXRtX21lZGl1bT1lbWFpbCZ1dG1fc291cmNlPUdvdkRlbGl2ZXJ5In0.wLo4s8k6oWGErEHicMMI6UEBJ79JSLVPEkJX1hqcb0w/s/2580731833/br/150277375178-l" style="color: #ec3f13; text-decoration: underline;" target="_blank" data-saferedirecturl="https://www.google.com/url?hl=en&amp;q=https://lnks.gd/l/eyJhbGciOiJIUzI1NiJ9.eyJidWxsZXRpbl9saW5rX2lkIjoxMTIsInVyaSI6ImJwMjpjbGljayIsImJ1bGxldGluX2lkIjoiMjAyMjEyMTMuNjgxMjA1NTEiLCJ1cmwiOiJodHRwczovL21kbWFwLm9yci5ub2FhLmdvdi92aXN1YWxpemU_dXRtX21lZGl1bT1lbWFpbCZ1dG1fc291cmNlPUdvdkRlbGl2ZXJ5In0.wLo4s8k6oWGErEHicMMI6UEBJ79JSLVPEkJX1hqcb0w/s/2580731833/br/150277375178-l&amp;source=gmail&amp;ust=1671464435965000&amp;usg=AOvVaw3u_AWPW4uQgVOG3cu0gOjM" rel="noopener">visualize</a>."</p>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left"> </p>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left">Grouping data from multiple sites is a powerful tool. However, be careful about drawing conclusions if data collection is sparse or inconsistent, and if the sites within the selection differed over time. As MDMAP grows and we have more data, the collective dataset will become more and more useful!</p>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left"> </p>
<a href="https://lnks.gd/l/eyJhbGciOiJIUzI1NiJ9.eyJidWxsZXRpbl9saW5rX2lkIjoxMTMsInVyaSI6ImJwMjpjbGljayIsImJ1bGxldGluX2lkIjoiMjAyMjEyMTMuNjgxMjA1NTEiLCJ1cmwiOiJodHRwczovL21kbWFwLm9yci5ub2FhLmdvdi92aXN1YWxpemU_dXRtX21lZGl1bT1lbWFpbCZ1dG1fc291cmNlPUdvdkRlbGl2ZXJ5In0.9g2Kqolq0mO8O_YAEHsMjFiOnhpFT_tvdp3GdM34KX0/s/2580731833/br/150277375178-l" rel="noopener noreferrer" style="color: #1d5782; text-decoration: underline;" target="_blank" data-saferedirecturl="https://www.google.com/url?hl=en&amp;q=https://lnks.gd/l/eyJhbGciOiJIUzI1NiJ9.eyJidWxsZXRpbl9saW5rX2lkIjoxMTMsInVyaSI6ImJwMjpjbGljayIsImJ1bGxldGluX2lkIjoiMjAyMjEyMTMuNjgxMjA1NTEiLCJ1cmwiOiJodHRwczovL21kbWFwLm9yci5ub2FhLmdvdi92aXN1YWxpemU_dXRtX21lZGl1bT1lbWFpbCZ1dG1fc291cmNlPUdvdkRlbGl2ZXJ5In0.9g2Kqolq0mO8O_YAEHsMjFiOnhpFT_tvdp3GdM34KX0/s/2580731833/br/150277375178-l&amp;source=gmail&amp;ust=1671464435965000&amp;usg=AOvVaw304qyS_0wNKET9gKtE57Pq"><figure class="post__image align-center"><img loading="lazy"  style="width: 560px; height: 245px;" src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/unnamed7.png" alt="" width="560" height="245" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed7-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed7-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed7-md.png 768w"></figure></a>
<p style="width: 100%; text-align: left; font-size: 8pt; font-style: italic; font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; color: #3a3a3a; line-height: 17px; margin: 0; padding: 0;" align="left">In the example above, data are filtered by “Texas” and all debris is displayed. Hovering over each point on the number of sites and surveys contributing to the average on display. Data can be filtered by country, state, or public groups. When logged-in, you can also filter by “my sites” or “my groups.”</p>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left"> </p>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left">Standard deviations are shown for surveys that sub-sampled within the survey site, using either the Standing Stock or MDMAP 2.0 protocols.</p>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left"> </p>
<p style="font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; text-align: left; margin: 0; padding: 0;" align="left">The default display is to all debris items. Filter by material or item type to look at specific categories!<br><br></p>
<div class="m_-2332561867194686856govd_hr" style="padding: 0px;">
<div class="m_-2332561867194686856govd_hr_inner"><span style="color: #0688cb; font-family: helvetica; font-size: 21px; letter-spacing: var(--letter-spacing);">Participant Highlights</span></div>
</div>
<div class="m_-2332561867194686856govd_hr" style="padding: 0px;">
<div class="m_-2332561867194686856govd_hr_inner">
<table style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal); width: 100%;" border="0" width="100%" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td style="width: 33.0956%;"><figure class="post__image"><img loading="lazy"  style="width: 233px; height: 173px;" src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/unnamed8.jpg" alt="" width="233" height="173" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed8-xs.jpg 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed8-sm.jpg 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed8-md.jpg 768w"></figure></td>
<td style="width: 66.9044%;">
<p style="text-align: left; font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; margin: 0; padding: 0;" align="left">During the Chesapeake Bay Foundation's fall student leadership conference near Lorton, Virginia, high schoolers did an MDMAP survey along the Potomac River. The students learned about scientific data collection and discussed the issues of plastics and marine debris in the Chesapeake Bay (Credit: Kassie Fenn).</p>
</td>
</tr>
<tr>
<td style="width: 33.0956%;"><figure class="post__image"><img loading="lazy"  style="width: 234px; height: 177px;" src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/unnamed9.jpg" alt="" width="234" height="177" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed9-xs.jpg 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed9-sm.jpg 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed9-md.jpg 768w"></figure></td>
<td style="width: 66.9044%;">
<p style="text-align: left; font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; margin: 0; padding: 0;" align="left">AO Latinoamérica, an ocean education and stewardship volunteer organization based in Ensenada, Mexico established the first MDMAP site on the Baja peninsula: Playa Pacifica. Bienvenida al equipo! (Credit: Fernando Castillo).</p>
</td>
</tr>
<tr>
<td style="width: 33.0956%;"><figure class="post__image"><img loading="lazy"  style="width: 234px; height: 271px;" src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/unnamed10.jpg" alt="" width="234" height="271" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed10-xs.jpg 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed10-sm.jpg 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed10-md.jpg 768w"></figure></td>
<td style="width: 66.9044%;">
<p style="text-align: left; font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; margin: 0; padding: 0;" align="left">NOAA Marine Debris Program staff Mark Manuel, Amy Gohres, and Shanelle Naone hosted an MDMAP training for the Mariana Islands Nature Alliance. Ten participants spent a half day learning the ropes of MDMAP and established the first MDMAP sites on the Northern Mariana Islands. We warmly welcome to the team! At left, trainees sort, count, and categorize debris (Credit: NOAA).</p>
</td>
</tr>
<tr>
<td class="m_-2332561867194686856gd_combo_image_cell" style="width: 33.0956%;" width="232"><figure class="post__image"><img loading="lazy"  style="width: 232px; height: 138px;" src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/unnamed11.jpg" alt="" width="232" height="138" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed11-xs.jpg 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed11-sm.jpg 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed11-md.jpg 768w"></figure></td>
<td class="m_-2332561867194686856gd_combo_text_cell" style="width: 66.9044%;">
<p style="text-align: left; font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; margin: 0; padding: 0;" align="left">During a creative writing and art retreat hosted by Heart of Cartm, participants conducted an MDMAP survey near Manzanita, Oregon. They then used the debris to create works of art. The retreat hosted people from diverse geography and professions united by a common interest in ocean health (Credit: Denise Harrington).</p>
</td>
</tr>
<tr>
<td style="width: 33.0956%;"><figure class="post__image"><img loading="lazy"  style="width: 233px; height: 175px;" src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/unnamed12.jpg" alt="" width="233" height="175" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed12-xs.jpg 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed12-sm.jpg 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/24/responsive/unnamed12-md.jpg 768w"></figure></td>
<td style="width: 66.9044%;">
<p style="text-align: left; font-family: Helvetica Neue,Helvetica,Helvetica,Arial,sans-serif!important; font-size: 14px; color: #3a3a3a; line-height: 17px; margin: 0; padding: 0;" align="left">At left, 11th grade students from the Taipei European School survey Venice beach on the coral island of XiaoLiuQiu in Taiwan. Through MDMAP, students learned science concepts, data collection skills, and explored the issue and solutions to marine debris (Credit: Nans Bujan).</p>
</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Digital Image Feedback Synthesis</title>
        <author>
            <name>Phileas Dazeley-Gaist</name>
        </author>
        <link href="https://phileasdg.github.io/phileas-dazeley-gaist/digital-image-feedback-synthesis/"/>
        <id>https://phileasdg.github.io/phileas-dazeley-gaist/digital-image-feedback-synthesis/</id>
        <media:content url="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/Screenshot-2022-12-08-at-23.12.15.png" medium="image" />
            <category term="Undergraduate work"/>
            <category term="Programming"/>
            <category term="Mathematica"/>
            <category term="Art?"/>

        <updated>2023-01-26T16:14:06-05:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/Screenshot-2022-12-08-at-23.12.15.png" alt="" />
                    Update: You can read an expanded exploration of this project at this&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/Screenshot-2022-12-08-at-23.12.15.png" class="type:primaryImage" alt="" /></p>
                <h2>Update:</h2>
<p>You can read an expanded exploration of this project at <a href="https://community.wolfram.com/groups/-/m/t/2816083" target="_blank" rel="noopener">this Wolfram community forum page</a>. If you're interested in interacting directly with my code, that's the place. ;)</p>
<h2>Pre(r)amble</h2>
<figure class="post__image">I still haven't found the best way to share Mathematica projects, which is a shame because it has quickly become my favourite prototyping and computational exploration programming language. Somehow, linking to Mathematica notebooks in the cloud just doesn't feel right. It feels like cheating, like I'm getting away with a pretend blog post. It's all pretty silly, but there you go. <br><br>Just a couple days ago, I wrote a notebook implementing a video feedback synthesis process diagram by José María Castelo from his project [MorphogenCV](https://github.com/jmcastelo/MorphogenCV). <br><br>Here is José's diagram: <br><br><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23//image.png" alt="" width="449" height="824" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23//responsive/image-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23//responsive/image-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23//responsive/image-md.png 768w"></figure><br><br>In this blog post, I'm going to write about this implementation and the cool things it does. I'll explore the code, providing explanations and code output as examples. Note: In this project, I wrote my code above all to be readable. It is quite slow, and I may rewrite it some day to be much faster. There are many obvious ways it could be improved, but I am satisfied now with how easy it is to parse when reading.</p>
<h2>Video Feedback</h2>
<p>Video feedback is a unique visual phenomenon that occurs when a video camera is pointed at a monitor displaying the camera's own output. This creates a feedback loop, resulting in a pattern of video distortion and abstraction. By following José's diagram, we will be able to create a Mathematica function that can simulate this phenomenon and produce really cool video feedback patterns. Let's begin.</p>
<h2>Understanding the process</h2>
<p>José's diagram allows us to break the feedback synthesis into discrete steps for each recursion. These are:</p>
<ol>
<li>Preprocessing the input image by equalizing its histogram and optionally shifting the image hue.</li>
<li>Make three copies of the preprocessed input, and process them according to three different processes. The first process applies contrast, brightness, sharpening, rotating, and resizing adjustments to the copy. The second applies two blurring adjustments to the copy. Lastly, the third applies contrast, brightness, erosion, and blur to the copy.</li>
<li>Blend the processed copies</li>
</ol>
<h2>Implementation</h2>
<p>Let's see what this looks like in practice! First, let's define an input image:</p>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/Screenshot-2022-12-08-at-22.01.52.png" alt="" width="214" height="115" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-08-at-22.01.52-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-08-at-22.01.52-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-08-at-22.01.52-md.png 768w"></figure>
<p>Let's preprocess the image: </p>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/Screenshot-2022-12-09-at-17.59.13.png" alt="" width="697" height="276" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-17.59.13-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-17.59.13-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-17.59.13-md.png 768w"></figure>
<p>Now, let's take the prepared image, and apply the processes described in the previous section to three separate copies:</p>
<p>The first process: </p>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/Screenshot-2022-12-09-at-18.00.13.png" alt="" width="694" height="270" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.00.13-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.00.13-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.00.13-md.png 768w"></figure>
<p>The second process: </p>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/Screenshot-2022-12-09-at-18.00.42.png" alt="" width="698" height="213" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.00.42-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.00.42-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.00.42-md.png 768w"></figure>
<p>The third process:</p>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/Screenshot-2022-12-09-at-18.01.11.png" alt="" width="693" height="302" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.01.11-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.01.11-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.01.11-md.png 768w"></figure>
<p>Finally, we blend the resulting images together:</p>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/Screenshot-2022-12-09-at-18.15.41.png" alt="" width="693" height="309" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.15.41-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.15.41-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.15.41-md.png 768w"></figure>
<p>Here is a visualisation of the steps of the process: </p>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/Screenshot-2022-12-09-at-18.16.52.png" alt="" width="698" height="165" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.16.52-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.16.52-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.16.52-md.png 768w"></figure>
<p>All that's left to do is tie these steps together in a function:</p>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/Screenshot-2022-12-09-at-18.18.03.png" alt="" width="696" height="537" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.18.03-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.18.03-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.18.03-md.png 768w"></figure>
<p>Let's visualise the first few iterations of feedback from a starting image at some arbitrary settings:</p>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/Screenshot-2022-12-09-at-18.19.36.png" alt="" width="696" height="234" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.19.36-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.19.36-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.19.36-md.png 768w"></figure>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/Screenshot-2022-12-09-at-18.20.34.png" alt="" width="696" height="446" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.20.34-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.20.34-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.20.34-md.png 768w"></figure>
<p>Then let's visualise the result after many iterations starting from the same input.</p>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/Screenshot-2022-12-09-at-18.22.42.png" alt="" width="694" height="245" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.22.42-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.22.42-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.22.42-md.png 768w"></figure>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/Screenshot-2022-12-09-at-18.25.43.png" alt="" width="697" height="382" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.25.43-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.25.43-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.25.43-md.png 768w"></figure>
<p>Here are some examples of output I got from playing around with the settings for a bit:</p>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/Screenshot-2022-12-09-at-18.26.26.png" alt="" width="696" height="358" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.26.26-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.26.26-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.26.26-md.png 768w"></figure>
<p>You get these interesting stripy shapes for even very simple inputs, for instance: </p>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/Screenshot-2022-12-09-at-18.28.21.png" alt="" width="695" height="372" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.28.21-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.28.21-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.28.21-md.png 768w"></figure>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/Screenshot-2022-12-09-at-18.28.41.png" alt="" width="1336" height="738" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.28.41-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.28.41-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/responsive/Screenshot-2022-12-09-at-18.28.41-md.png 768w"></figure>
<p>I hope this exploration was fun! I'll end this post with a gallery of curated outputs from playing around with different inputs and settings: </p>
<div class="gallery-wrapper"><div class="gallery"  data-is-empty="false" data-translation="Add images" data-columns="3">
<figure class="gallery__item"><a href="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/gallery/pattern1-3.png" data-size="1000x992"><img loading="lazy" src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/gallery/pattern1-3-thumbnail.png" alt="" width="768" height="762"></a></figure>
<figure class="gallery__item"><a href="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/gallery/pattern2-3.png" data-size="1000x992"><img loading="lazy" src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/gallery/pattern2-3-thumbnail.png" alt="" width="768" height="762"></a></figure>
<figure class="gallery__item"><a href="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/gallery/pattern3-3.png" data-size="1000x992"><img loading="lazy" src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/gallery/pattern3-3-thumbnail.png" alt="" width="768" height="762"></a></figure>
<figure class="gallery__item"><a href="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/gallery/pattern4-3.png" data-size="1000x992"><img loading="lazy" src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/gallery/pattern4-3-thumbnail.png" alt="" width="768" height="762"></a></figure>
<figure class="gallery__item"><a href="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/gallery/pattern5-3.png" data-size="1000x992"><img loading="lazy" src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/gallery/pattern5-3-thumbnail.png" alt="" width="768" height="762"></a></figure>
<figure class="gallery__item"><a href="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/gallery/pattern6-3.png" data-size="1000x1000"><img loading="lazy" src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/gallery/pattern6-3-thumbnail.png" alt="" width="768" height="768"></a></figure>
<figure class="gallery__item"><a href="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/gallery/pattern7-3.png" data-size="1000x1000"><img loading="lazy" src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/gallery/pattern7-3-thumbnail.png" alt="" width="768" height="768"></a></figure>
<figure class="gallery__item"><a href="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/gallery/pattern8-3.png" data-size="1000x1000"><img loading="lazy" src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/gallery/pattern8-3-thumbnail.png" alt="" width="768" height="768"></a></figure>
<figure class="gallery__item"><a href="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/gallery/pattern9-3.png" data-size="1000x1000"><img loading="lazy" src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/23/gallery/pattern9-3-thumbnail.png" alt="" width="768" height="768"></a></figure>
</div></div>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Video Feedback, Emergence, and Poetry</title>
        <author>
            <name>Phileas Dazeley-Gaist</name>
        </author>
        <link href="https://phileasdg.github.io/phileas-dazeley-gaist/recursive-poetry/"/>
        <id>https://phileasdg.github.io/phileas-dazeley-gaist/recursive-poetry/</id>
        <media:content url="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/20/Screenshot-2022-11-21-at-21.05.40.png" medium="image" />
            <category term="Undergraduate work"/>
            <category term="Programming"/>
            <category term="Art?"/>

        <updated>2022-11-21T21:08:06-05:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/20/Screenshot-2022-11-21-at-21.05.40.png" alt="" />
                    I submitted the following short video as part of a midterm for&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/20/Screenshot-2022-11-21-at-21.05.40.png" class="type:primaryImage" alt="" /></p>
                <p>I submitted the following short video as part of a midterm for a course on Chaos and Fractals in my junior year of undergrad. In it, I play with video feedback generated by pointing my laptop webcam to a television in College of the Atlantic's Thorndike Library Seminar Room while trying to express my admiration for emergence in complex systems, and making a connection to poetry.</p>
<p>I controlled the video stream using OpenCV in Python, which allowed me to manipulate various properties of the image, like hue, saturation, whether of not to invert the image, tile, translate, rotate, or mirror it, etc. In the recordings of video feedback streams that you will see in this video, I vary the following image properties:</p>
<ul>
<li>monochrome/colour</li>
<li>no inverting/inverting</li>
<li>no mirroring/mirroring</li>
<li>hue shifts</li>
</ul>
<p>The result is this pretty cute and fun video which I hope you will enjoy:</p>
<figure class="post__video"><iframe loading="lazy" width="560" height="314" src="https://www.youtube.com/embed/mBQfjY_g-pI" allowfullscreen="allowfullscreen" data-mce-fragment="1"></iframe></figure>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Digital Double, Reflections on Digital Selfhood.</title>
        <author>
            <name>Phileas Dazeley-Gaist</name>
        </author>
        <link href="https://phileasdg.github.io/phileas-dazeley-gaist/digital-double-reflections-on-digital-selfhood/"/>
        <id>https://phileasdg.github.io/phileas-dazeley-gaist/digital-double-reflections-on-digital-selfhood/</id>
        <media:content url="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/17/Screenshot-2022-08-12-at-01.07.35.png" medium="image" />
            <category term="Undergraduate work"/>
            <category term="Programming"/>
            <category term="Max msp jitter"/>
            <category term="Art?"/>

        <updated>2022-12-09T09:26:45-05:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/17/Screenshot-2022-08-12-at-01.07.35.png" alt="" />
                    Digital Double – Interactive Stochastic Video-Art Piece I was thrilled this last Spring to&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/17/Screenshot-2022-08-12-at-01.07.35.png" class="type:primaryImage" alt="" /></p>
                <h2 class="p1"><span class="s1">Digital Double</span><span class="s2"> </span><span class="s1">–</span><span class="s2"> </span><span class="s1">Interactive Stochastic Video-Art Piece</span></h2>
<p class="p2"><span class="s1">I was thrilled this last Spring to have the opportunity to exhibit my art installation ‘Digital Double’ at College of the Atlantic as part of the College’s end of year musical and artistic programming. This was, coincidentally, my very first exhibit; putting it together was a challenging, at times frustrating, but ultimately enlightening and extremely rewarding experience, which I will try my best to relate some highlights from in this blog post.</span></p>
<h2 class="p1"><span class="s1">What is a digital double?</span></h2>
<p class="p4"><span class="s1">What’s a digital double in the first place? Your digital double is your online persona</span><span class="s3"> </span><span class="s1">–</span><span class="s3"> </span><span class="s1">the version of you that exists in the digital world. It includes everything from your social media profiles to your online banking information. Due to the ever-increasing ubiquity of the internet, our digital doubles are steadily becoming more and more important in our everyday lives. What you post online, who you add to your friends, and what you search are among a vast number of actions that affect your digital double and those of people in your close (and sometimes not so close) online social graph. Our digital doubles mediate and incarnate our online interactions in the digital world. We affect our doubles, and they affect us. But what is the nature of our relationships with these digital representations of us?</span></p>
<p class="p4"><span class="s1">There is no single answer to this question. Our relationships with our digital doubles depend on a variety of factors, including our individual personalities and the specific context in which we interact with our machines and online spaces. In general, however, we can say that our relationship with our digital doubles is complex and often contradictory. On the one hand, we rely on our digital doubles to help us navigate the digital world and to manage our online identities. On the other hand, we may be worried about the loss of privacy and control that comes with having a digital double.</span></p>
<p class="p4"><span class="s1">In some contexts, the digital double may appear alien, entirely external and Other. In others, the digital double may come to feel like a close friend or even a part of the self. The digital double is always changing, growing, and evolving along with the technology that creates and sustains it, and ourselves. As our relationships with our digital doubles continue to evolve, so too will our understandings of what it means to be human in the digital age.</span></p>
<h2 class="p1"><span class="s1">Origins of the Project</span></h2>
<p class="p2"><span class="s1">It was questioning digital selfhood and the notion of the digital double in a course on the history of video art with Professor Colin Capers that led me in my first year at College of the Atlantic to draft a short video art installation project exploring the relationship between people and their machines. The project was designed as a multi-projector set up in an empty room; Four projectors, one at each corner of the room projecting diagonally past one another to the opposite corner. In the centre of the room, by a tower connected to an early 2,000s CRT monitor, a chair on which visitors could sit and face distorted parodic representations of the digital double of an unknown internet user (I like the French ‘internaute’).</span></p>
<p class="p2"><span class="s1">Beyond the draught, the project lay dormant for almost three years until I registered last Spring to Critical Making and New Media Art, with Quran Karriem, visiting faculty from Duke University, and Musicianship, with Professor Jonathan Henderson, with the intent to explore generative aleatoric processes in music and new-media generation. Critical Making and New Media Art focused on the practice of making and the theory of new media art and design, as well as a fair amount of programming in Pure Data and Cycling74’s Max MSP, while Musicianship was a general introduction to musical practice and conventions. I decided to revisit the project and use these classes as an opportunity to actually bring it to fruition.</span></p>
<h2 class="p1"><span class="s1">Video presentation:</span></h2>
<p class="p2"><span class="s1">To review my work at the end of the Critical Making and New Media Art course, and as a way of providing an artist’s statement, I produced the following 25-minute video describing the exhibit in detail as well as the rationale behind it.</span></p>
<figure class="post__video"><iframe loading="lazy" width="560" height="314" src="https://www.youtube.com/embed/rKNGOd5dcow?t=458s" allowfullscreen="allowfullscreen" data-mce-fragment="1"></iframe></figure>
<h2 class="p1"><span class="s1">Concluding statement and reflection</span></h2>
<p class="p4"><span class="s1">Overall I am extremely pleased with the final product and the way the exhibit turned out. I was very lucky to have had the opportunity to work with some extremely talented and helpful people, including my classmates, professors, and the staff at the college. I am also grateful to have had the chance to work with some amazing technology, including high-powered projectors and the node-based visual programming tool Max MSP.</span></p>
<p class="p4"><span class="s1"> </span><span class="s1">There are, of course, always things that could have been done better. In particular, I would have liked to have had more time to fine-tune the visuals and the audio. I would also have liked to have been able to interact with visitors more during the exhibit. As it was, I was only able to talk to a few people during the exhibit itself, as I was busy setting up and taking down the equipment. All in all, however, I am very happy with the way the exhibit turned out, and I am looking forward to future opportunities to exhibit my work.</span></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Standing Stones and Megaliths of St Just - A GIS project</title>
        <author>
            <name>Phileas Dazeley-Gaist</name>
        </author>
        <link href="https://phileasdg.github.io/phileas-dazeley-gaist/standing-stones-and-megaliths-of-st-just/"/>
        <id>https://phileasdg.github.io/phileas-dazeley-gaist/standing-stones-and-megaliths-of-st-just/</id>
        <media:content url="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/9/menhirs-2.JPG" medium="image" />
            <category term="Undergraduate work"/>

        <updated>2022-12-09T09:36:17-05:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/9/menhirs-2.JPG" alt="" />
                    I constructed the following ESRI ArcGIS StoryMap project for the college course&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/9/menhirs-2.JPG" class="type:primaryImage" alt="" /></p>
                <p>I constructed the following ESRI ArcGIS StoryMap project for the college course "Geographic Information Systems" taught by Professor Gordon Longsworth at the College of the Atlantic, in Fall 2020. I have embedded it below as a sample of my undergraduate GIS work. </p>
<p>Follow <a href="https://storymaps.arcgis.com/stories/3edd0a80cd114d02af9bdeb1b446d30b">this link</a> for to see this StoryMap.</p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Tracking Icebergs: Exploring the Mathematics of Iceberg Drift and Decay Models</title>
        <author>
            <name>Phileas Dazeley-Gaist</name>
        </author>
        <link href="https://phileasdg.github.io/phileas-dazeley-gaist/tracking-icebergs/"/>
        <id>https://phileasdg.github.io/phileas-dazeley-gaist/tracking-icebergs/</id>
        <media:content url="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/Iceberg_Ilulissat.jpg" medium="image" />
            <category term="Undergraduate work"/>

        <updated>2022-08-12T08:21:10-04:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/Iceberg_Ilulissat.jpg" alt="CC BY-SA 3.0, https://commons.wikimedia.org/w/index.php?curid&#x3D;730855" />
                    I wrote this short essay for the college course "Polar Ecology and&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/Iceberg_Ilulissat.jpg" class="type:primaryImage" alt="CC BY-SA 3.0, https://commons.wikimedia.org/w/index.php?curid&#x3D;730855" /></p>
                <div class="page" title="Page 1">
<div class="layoutArea">
<div class="column">
<p>I wrote this short essay for the college course "Polar Ecology and Exploration" taught by Professor Sean Todd at College of the Atlantic in Winter 2020. I have reproduced it here as a sample of my undergraduate writing. </p>
<h2>Introduction</h2>
<p>This paper will explore and contextualise the principles and methods at the centre of contemporary iceberg drift and decay mathematical models. To do so, it will first examine the incentives for institutional efforts to track drifting icebergs. Secondly, this paper will engage in an extensive introductory exploration of iceberg drift and decay approximation formulas and dynamic and thermodynamic models and assess their respective strengths and limitations. Finally, it will describe the process of running a modern drift and decay model simulation using MATLAB and report the raw simulation results.</p>
<h3>Incentives for Iceberg tracking</h3>
<p><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Icebergs are large masses of freshwater ice that form by breaking apart from a glacier, ice shelf, or larger icebergs, a process known as calving (Iceberg | Ice Formation, n.d.). In the Antarctic Circle, icebergs calve from the floating ice shelves of the Antarctic continent, which results in large and tall icebergs with steep cliff-like sides and flat tops, known as tabular icebergs (Ibid). In the Arctic, icebergs calve from glaciers, particularly those of Greenland (Ibid). NOAA’s National Ocean Service defines minimum characteristics of icebergs (according to the standard set by the International Ice Patrol) as follows:</span></p>
<div class="page" title="Page 1">
<div class="layoutArea">
<div class="column">
<p>“To be classified as an iceberg, the height of the ice must be greater than 16 feet above sea level and the thickness must be 98-164 feet and the ice must cover an area of at least 5,382 square feet.” (US Department of Commerce, n.d.)</p>
<p>One incentive for iceberg tracking and monitoring is risk minimisation. While even the smallest ice objects that satisfy these criteria easily pose threats to ships and offshore ventures, among others, larger icebergs, which can reach a freeboard (height above the waterline) of above 100 metres and individual mass exceeding 10,000,000 tonnes (100 times the typical mass of the smallest icebergs) pose additional and greatly increased threats to their surroundings as they drift (Iceberg Classification Systems, n.d.).</p>
<div class="page" title="Page 1">
<div class="layoutArea">
<div class="column">
<p>Other incentives for iceberg monitoring are scientific: Melting icebergs could contain clues to the processes behind ice-shelf collapse (Icebergs | National <span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Snow and Ice Data Center, n.d.). If so, their study could contribute to our understanding of global warming. As they melt, icebergs release freshwater into the ocean, suggesting that in large enough numbers, drifting icebergs could affect ocean circulation (Ibid). Furthermore, as they melt, icebergs disperse nutrients into the ocean, leaving trails of nutrient-rich freshwater, which attracts marine life and could therefore be of interest to marine biologists (Ibid).</span></p>
<div class="page" title="Page 2">
<div class="layoutArea">
<div class="column">
<p>Mathematical iceberg drift and decay models are powerful tools that, given accurate data, can assist researchers and institutions by predicting where they might expect to find icebergs or estimating the future drift of existing icebergs given an initial location to calculate from. These applications are desirable because of the high cost of real-world iceberg tracking, which is typically done via satellite imagery, aerial surveys, and sighting reporting from merchant and scientific ships (Icebergs | National Snow and Ice Data Center, n.d.).</p>
<div class="page" title="Page 2">
<div class="layoutArea">
<div class="column">
<h2>Drift and Decay</h2>
<p>While some simple approximation formulas exist to estimate iceberg drift and decay, these tend to produce somewhat caricatured predictions that are unsuitable for most research purposes. Among more complex mathematical models, some are probabilistic, but most sophisticated contemporary models are deterministic and incorporate thermodynamics in their predictions. This section will present iceberg drift and decay approximation methods, explore the principal essential components of these modern models, and assess their strengths and limitations.</p>
<h3>Approximation Formulas</h3>
<p>Although they lack precision, approximation rules for iceberg drift and decay are helpful in that they are speedy.</p>
<p>A frequent estimate of iceberg drift velocity is that it approximately equals 2% of the wind velocity relative to the ocean current (Smith, 1993). The approximation holds true for most cases in the Arctic, where small icebergs and strong winds are common, but does not in the Antarctic, where the combination of weak winds and generally larger icebergs render the effect of wind on iceberg drift negligible (Wagner et al., 2017).</p>
<p>In their report for the CRREL titled Some Elements of Iceberg Technology, W. F. Weeks and M. Mellor propose the following iceberg ice loss formula:</p>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/iceberg-figure-1.png" alt="figure 1: Z = K * Delta" width="141" height="45" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/responsive/iceberg-figure-1-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/responsive/iceberg-figure-1-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/responsive/iceberg-figure-1-md.png 768w"></figure>
<div class="page" title="Page 2">
<div class="layoutArea">
<div class="column">
<p>Where Z is the total ice loss at any point of an iceberg’s journey in metres, ∆ is the sum of mean daily water temperatures around the draught of the iceberg for <span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">every day of an iceberg’s drift in degrees Celsius, and K is a constant ~ 0.12. This formula appears rather infrequently in scientific literature and should be used cautiously.</span></p>
<div class="page" title="Page 3">
<div class="layoutArea">
<div class="column">
<p>While potentially useful for navigation and small-scale, short-term predictions of iceberg drift and decay, these shortcuts tend to produce skewed results, which can deviate significantly from real-world observations. For this reason, scientists should generally avoid them in research.</p>
<div class="page" title="Page 3">
<div class="layoutArea">
<div class="column">
<h3>Dynamic and Thermodynamic Models</h3>
<p>Modelling the dynamics and thermodynamics of icebergs, published in 1997 and co-authored by Grant R. Bigg, Martin R. Wadley, David P. Stevens, and John A. Johnson, is a foundational paper for the admittedly very niche field of iceberg drift modelling. The paper proposes the following momentum equation of horizontal iceberg motion:</p>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/iceberg-figure-2.png" alt="figure 2: M*(dV_i/dt) = -M*f*k*x*V_i+F_a+F_w+F_i+F_p+F+r" width="844" height="132" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/responsive/iceberg-figure-2-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/responsive/iceberg-figure-2-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/responsive/iceberg-figure-2-md.png 768w"></figure>
<p>Where M is the iceberg's mass (kg), and V_i is the horizontal velocity (m*s^-1). <span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">The </span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">components of the equation F_a, F_w, F_i, F_p, and F_r are respectively air and wind </span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">drag (F_a), water drag (F_w), sea ice drag (F_i), the horizontal pressure gradient force </span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">the water around the iceberg exerts on the volume that the iceberg displaces (F_p), </span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">water and wave drag (F_w), and the wave radiation force (F_r), while f is the Coriolis </span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">parameter, a value equal to 2Ω * sin phi, where Ω is the rate of rotation of the Earth, and phi is latitude (Holton &amp; Hakim, 2012) (reported in rad*s^-1) (Bigg et al., 1997).</span></p>
<div class="page" title="Page 3">
<div class="layoutArea">
<div class="column">
<p>Since the mass of an iceberg reduces as the iceberg drifts, melts, and sometimes breaks up into smaller pieces, it is important to note that in practice, the equation described above only reveals an iceberg’s momentum at a given point of its life: it does not account for iceberg decay. The equation returns the momentum of any iceberg given its mass and velocity. However, alone, its applications to iceberg drift modelling are limited because drift is affected by each modelled iceberg’s length, width, and mass (Wagner et al., 2017). To account for the gradual change in mass and dimensions of drifting icebergs, Bigg et al. (1997) describe and propose methods to jointly model iceberg thermodynamics. They write:</p>
<div class="page" title="Page 3">
<div class="layoutArea">
<div class="column">
<blockquote>
<p>“The melting of an iceberg constantly changes its mass and shape, and thus must be modelled in any long-term simulation of trajectories... The melting/erosional processes that have been included are ‘basal’ convection or turbulent heat transfer, buoyant <span style="font-family: var(--font-serif); color: var(--text-primary-color); font-size: inherit;">convection, wave erosion, solar and sensible heating, and sublimation.” (p. 117)</span></p>
</blockquote>
<div class="page" title="Page 4">
<div class="layoutArea">
<div class="column">
<p>Among the melt processes they list, the dominant three according to Till J. W. Wagner, Rebecca W. Dell, and Ian Eisenman (2017) are wind-driven wave erosion (mechanical) M_e, turbulent basal melt (thermal) – melting at the base of the iceberg; described as turbulent because the melting basal layer is sandwiched between the cold of the ice and the relative warmth of the water, forming a transitional volume of turbulent convection (Ahlers, 2009) – M_b, and thermal sidewall erosion from buoyant convection – erosion of iceberg sidewalls from changes in ice surface temperature due to variations in iceberg buoyancy (Convection, n.d.) – noted M_v. In their paper, An Analytical Model of Iceberg Drift, the authors incorporate these factors in their own iceberg drift and decay model but discard the other thermodynamic factors described by Bigg et al. (1997), which they assert are negligible in comparison to the others. Their formulation of the equations for these three factors are:</p>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/iceberg-figure-3.png" alt="figure 3" width="1488" height="738" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/responsive/iceberg-figure-3-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/responsive/iceberg-figure-3-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/responsive/iceberg-figure-3-md.png 768w"></figure>
<div class="page" title="Page 4">
<div class="layoutArea">
<div class="column">
<p>For the purposes of this paper, it will suffice to mention that these equations solve for the changes in mass, length (L), width (W), and height (H) of modelled icebergs, and that the dimensions of modelled icebergs change as</p>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/iceberg-figure-4.png" alt="figure 4" width="282" height="238" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/responsive/iceberg-figure-4-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/responsive/iceberg-figure-4-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/responsive/iceberg-figure-4-md.png 768w"></figure>
<div class="page" title="Page 4">
<div class="layoutArea">
<div class="column">
<p>As should be evident, solving these equations requires data on the conditions of any modelled iceberg’s immediate environment, most importantly sea state, sea surface temperature, and atmospheric temperature estimates. Many models, including the one proposed by Wagner et al. (2017) source these data from </p>
<div class="page" title="Page 5">
<div class="layoutArea">
<div class="column">
<p>NASA’s “Estimating the Circulation and Climate of the Ocean” (ECCO) consortium, or NCAR and UCAR’s Community Climate System Model (CCSM).</p>
<p>By sequentially solving the iceberg momentum and decay equations, feeding the results of the momentum equation into the decay equations and vice versa, we can calculate and plot the trajectory of an iceberg starting at any given latitudinal and longitudinal coordinates (a monumental task which researchers typically undertake programmatically) (Eisenman et al., 2021). The accuracy of the results produced using this method makes the use of momentum and decay equations in models attractive, and their use is now common in iceberg drift and decay models. Variations of the formulas first described by Bigg et al. (1997) are at the core of many iceberg drift and decay modelling tools today, programs such as MITberg, a MATLAB project developed by Alan Condron at the University of Massachusetts and designed to be used with MIT’s general circulation model (MITgcm), (MITberg: Icebergs and Climate Change, n.d.), itself a program designed to model fluid dynamics in the Earth ocean and atmosphere (MITgcm User Manual, n.d.). Other examples include OpenBerg, a python module for use with the python ocean drift modelling library OpenDrift (Opendrift.Models.Openberg — OpenDrift Documentation, n.d.), Elmer/Ice, an add-on package to the Elmer FEM (finite element method) program, which is designed to model ice dynamics (Elmer Ice - Home, n.d.), and FESOM-IB, a module designed for the Finite-Element/VolumE Sea-ice Ocean Model (Rackow et al., 2013).</p>
<div class="page" title="Page 5">
<div class="layoutArea">
<div class="column">
<p>The main advantages of dynamic and thermodynamic deterministic models of iceberg drift and decay over approximations and probabilistic models reside in the increased precision and reliability of their results when compared to real-world observational data (for an example, see Figure 1). In fact, they so surpass probabilistic models that these have largely fallen out of use. However, with this gained precision come challenges and drawbacks: high computational power requirements for long time scale or large iceberg sample simulations due to the volume of calculations and data which the models must process with each new drift prediction step, and lower accessibility to laypeople due to the steep learning curves and sometimes high financial costs associated with the use of the frameworks (hardware and software) through which these models are accessible (typical software frameworks are high-level sometimes proprietary programs or programming languages such as MATLAB, which hosts two of the models mentioned in this paper, the Lagrangian model proposed by Wagner et al. (2017), and MITberg)</p>
<figure class="post__image" ><img loading="lazy" src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/iceberg-figure-5.png" alt="figure 5: a) Observed iceberg trajectories using data from the Antarctic Iceberg Tracking Database. b) One-year duration simulated trajectories for 200 icebergs of lengths ranging between 15 and 20 km using the drift and decay model proposed by Wagner et al. (2017). (Journal of Physical Oceanography 47, 7; 10.1175/JPO-D-16-0262.1)" width="1152" height="1232" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/responsive/iceberg-figure-5-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/responsive/iceberg-figure-5-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/responsive/iceberg-figure-5-md.png 768w">
<figcaption >
<div class="page" title="Page 6">
<div class="layoutArea">
<div class="column">
<p>a) Observed iceberg trajectories using data from the Antarctic Iceberg Tracking Database.<br>b) One-year duration simulated trajectories for 200 icebergs of lengths ranging between 15 and 20 km using the drift and decay model proposed by Wagner et al. (2017). (Journal of Physical Oceanography 47, 7; 10.1175/JPO-D-16-0262.1)</p>
</div>
</div>
</div>
</figcaption>
</figure>
<div class="page" title="Page 6">
<div class="layoutArea">
<div class="column">
<h2>Running a drift and decay model</h2>
<p>The model proposed by Wagner et al. (2017) is publicly available at http://eisenman.ucsd.edu/code.html, and as a MATLAB code repository on GitHub. This section will shortly describe the process of setting up and running the model using MATLAB online and report the model output generated using the described setup program parameters.</p>
<p>After downloading the model repository from GitHub and uploading it to a directory of MATLAB Drive, I accessed the main program by opening the model file named “iceberg_model_WDE17.m”. I then confirmed that my MATLAB license included access to the MATLAB mapping toolbox, which the model requires to generate iceberg drift trail maps (Eisenman et al., 2021). The program code is clear and generously annotated with usage instructions. Its first four sections allow the user to define their own model parameters. Respectively these are: 1) a model data input section where the user can specify the ocean surface and ambient atmospheric temperature data which the model requires <span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">and its source (ECCO or CCSM), 2) an iceberg parameter and analytical expression definition section in which properties such as air density, water density, or C' (see the iceberg decay equations described in section II.0b), 3) a space domain definition section in which the user specifies the area in which the model will compute iceberg trajectories as well as the boundaries for map figure generation, and 4) a run parameter definition section in which the user defines the time step length, the number of iceberg trajectories to compute, iceberg seed locations, seeding spacing, iceberg dimensions, and other settings specific to the desired simulation (Eisenman et al., 2021).</span></p>
<div class="page" title="Page 7">
<div class="layoutArea">
<div class="column">
<p>For demonstration purposes, I run the model here using mostly default program settings, having only adjusted the number of iceberg trajectories to compute and the iceberg start seeds. The code output reported below are the results of a 1-year-long model projection for 25 icebergs based on 1992 ECCO data:</p>
</div>
</div>
</div>
</div>
</div>
</div>
<p> </p>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/iceberg-figure-6.png" alt="Wagner et al. model map output showing iceberg trails grouped by size class." width="1624" height="1014" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/responsive/iceberg-figure-6-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/responsive/iceberg-figure-6-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/8/responsive/iceberg-figure-6-md.png 768w"><figcaption>
<div class="page" title="Page 7">
<div class="layoutArea">
<div class="column">
<p>Wagner et al. model map output showing iceberg trails grouped by size class.</p>
</div>
</div>
</div>
</figcaption></figure>
<div class="page" title="Page 8">
<div class="layoutArea">
<div class="column">
<h2>Concluding statement</h2>
<p>Mathematical models of iceberg drift and decay are incredibly useful tools that can return results accurate enough to have consequential applications to scientific research, navigation, and security monitoring, but their high computing power requirements and relatively low accessibility to laypeople limit their use outside of well-funded research projects and state-run organisations. As a student, the MATLAB licence I bought for this project cost me $125 US, but for commercial or professional uses, the same license would have cost over $2000. Despite their efficacy and reliability, the high financial or material costs of entry and overall complexity of iceberg drift and decay modelling programs remain a major obstacle to their widespread adoption.</p>
</div>
</div>
<div class="layoutArea">
<div class="column">
<h2>Sources Cited</h2>
<p>Ahlers, G. (2009). Turbulent convection. Physics, 2. https://physics.aps.org/articles/v2/74</p>
<p>Bigg, G. R., Wadley, M. R., Stevens, D. P., &amp; Johnson, J. A. (1997). Modelling the dynamics and thermodynamics of icebergs. Cold Regions Science and Technology, 26(2), 113–135. https://doi.org/10.1016/S0165-232X(97)00012-8</p>
<p>Convection. (n.d.). Retrieved 4 March 2021, from https://www.chemeurope.com/en/encyclopedia/Convection.html#Buoyancy_induced_ convection_not_due_to_heat</p>
</div>
</div>
</div>
<div class="page" title="Page 9">
<div class="layoutArea">
<div class="column">
<p>Eisenman, I., Dell, R. W., &amp; Wagner, T. J. W. (2021). Model of iceberg drift and decay (p. 5436915492 Bytes) [Data set]. figshare. https://doi.org/10.6084/M9.FIGSHARE.12857672</p>
<p>Elmer Ice–Home. (n.d.). Retrieved 4 March 2021, from https://elmerice.elmerfem.org/ Holton, J., &amp; Hakim, G. (2012). An Introduction to Dynamic Meteorology, (5th ed., Vol.88).</p>
<p>Iceberg | ice formation. (n.d.). Encyclopedia Britannica. Retrieved 4 March 2021, from https://www.britannica.com/science/iceberg</p>
<p>Iceberg Classification Systems. (n.d.). Retrieved 4 March 2021, from https://www.universalcompendium.com/tables/science/iceb.htm</p>
<p>MITberg: Icebergs and Climate Change. (n.d.). Retrieved 4 March 2021, from http://www.geo.umass.edu/faculty/condron/MITberg/download.htm</p>
<p>MITgcm user manual. (n.d.). Retrieved 4 March 2021, from https://mitgcm.readthedocs.io/en/latest/</p>
<p>opendrift.models.openberg–OpenDrift documentation. (n.d.). Retrieved 4 March 2021, from https://opendrift.github.io/autoapi/opendrift/models/openberg/index.html</p>
<p>Quick Facts on Icebergs | National Snow and Ice Data Center. (n.d.). Retrieved 4 March 2021, from https://nsidc.org/cryosphere/quickfacts/icebergs.html</p>
<p>Rackow, T., Wesche, C., Timmermann, R., &amp; Juricke, S. (2013). Modelling Southern Ocean iceberg drift and decay with FESOM-IB. EPIC3European Geophysical Union, Vienna, Austria, 2013-04-07-2013-04-12. European Geophysical Union, Vienna, Austria. https://epic.awi.de/id/eprint/37482/</p>
<p>Smith, S. D. (1993). Hindcasting iceberg drift using current profiles and winds. Cold Regions Science and Technology, 22(1), 33–45. https://doi.org/10.1016/0165- 232X(93)90044-9</p>
<p>US Department of Commerce, N. O. and A. A. (n.d.). What is an iceberg? Retrieved 4 March 2021, from https://oceanservice.noaa.gov/facts/iceberg.html</p>
<p>Wagner, T. J. W., Dell, R. W., &amp; Eisenman, I. (2017). An Analytical Model of Iceberg Drift. Journal of Physical Oceanography, 47(7), 1605–1616. https://doi.org/10.1175/JPO-D-16-0262.1</p>
<p>Weeks, W. F., &amp; Mellor, M. (1978). SOME ELEMENTS OF ICEBERG TECHNOLOGY. In A. A. Husseiny (Ed.), Iceberg Utilization (pp. 45–98). Pergamon. https://doi.org/10.1016/B978-0-08-022916-4.50015-7</p>
</div>
</div>
</div>
<p> </p>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Mathematical Systems Thinking for Human Ecology</title>
        <author>
            <name>Phileas Dazeley-Gaist</name>
        </author>
        <link href="https://phileasdg.github.io/phileas-dazeley-gaist/mathematical-systems-thinking-for-human-ecology/"/>
        <id>https://phileasdg.github.io/phileas-dazeley-gaist/mathematical-systems-thinking-for-human-ecology/</id>
        <media:content url="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/10/lsystem1.png" medium="image" />
            <category term="Undergraduate work"/>

        <updated>2022-08-12T08:22:35-04:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/10/lsystem1.png" alt="" />
                    The Human Ecology of differential equations A reflection on the places and&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/10/lsystem1.png" class="type:primaryImage" alt="" /></p>
                <div class="page" title="Page 1">
<div class="section">
<div class="layoutArea">
<div class="column">
<h2>The Human Ecology of differential equations</h2>
<div class="page" title="Page 1">
<div class="section">
<div class="layoutArea">
<div class="column">
<p>A reflection on the places and roles of mathematics in human ecological undertakings would without a doubt be misleading if it were not to include mention of differential equations and their long history of being used for dynamical systems modelling.</p>
<p>Differential equations are a classic tool for dynamical systems modelling, as they offer researchers a starting point from which to model real-world interactions in environments without having to know the exact processes that underly them. In essence, they allow researchers to study the dynamics of a system from derivatives of the ”exact processes” functions that compose it, and depending on whether a system of differential equations is solvable, that is to say, whether one can arrive at the definitive ”exact process” functions that the differential equations of the system are derivatives of, they may allow researchers to model a given dynamic system completely.</p>
<p>Differential equations are the go-to tool for complex dynamical systems modelling and analysis, and are used extensively to model physical, chemical, and purely mathematical processes. From the beginning of the century to the mid-1970s, ecologists, meteorologists, and financiers attempted to apply the same techniques to their fields (see for instance the work of Edward Lorenz or Stephen Smale). Ecologists and social scientists, including human ecologists use these approaches extensively (see An Ecological Introduction, K. E. Boulding, 1950, or Complex ecosystem and sustainable development, Ma Shijun &amp; Wang Rusong, 1990) But while these attempts in some cases revealed new facets of mathe- matics, they generally failed to do what they set out to achieve. Why?</p>
<p>The answer lies in the features of naturally occurring systems. In a controlled environment, sets of ”exact processes” functions can be enforced as axioms of a closed system, outside functions apply to a system and manage its behaviour. In that case, systems of differential equations may be an appropriate modelling tool. Sadly, there’s a big catch: In the wide wide world we live in, most naturally occurring systems are adaptive, meaning as their dynamics evolve, the ”exact processes” functions that constitute an adaptive system change, are in unpredictable and constant flux. The cause for these changes is that the ”exact processes” functions are part of the systems themselves, and dependent on material and relational processes that occur within the respective systems, which are described by other ”exact processes” functions. The interactions between these functions can form extensive networks which describe intricate mixes of flows, stocks, and transformations. Differential equations can model Dynamic Systems but not Adaptive Systems. For this latter type of system, differential equations are of very limited help.</p>
<div class="page" title="Page 1">
<div class="section">
<div class="layoutArea">
<div class="column">
<h2>Do we need to model everything?</h2>
<div class="page" title="Page 1">
<div class="section">
<div class="layoutArea">
<div class="column">
<p>Before I reflect on other mathematical techniques and philosophies, and how I feel they relate to Human Ecology and could find their place in human ecological dialogue, I would like to consider the modes of <span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">apprehension of the world that emboldened many researcher throughout history to attempt to model the natural world.</span></p>
<div class="page" title="Page 2">
<div class="section">
<div class="layoutArea">
<div class="column">
<p>It is not self-evident that the world needs to be modelled. In fact, the world exists already, it’s out there waiting for us, what use is a copy of the process to us if it is only a shadow of the real thing? Why not go out and enjoy it in person? There are so many ways of learning about the world and the systems within it. Often neglected is hands-on learning one can earn from experiencing the world from within: physically and emotionally, to be consumed and surrounded by the experience of being, feeling, seeing, and touching.</p>
<p>For my part, I like to think that while experiential learning in the world is a primordial need which all should get to experience, there is still a place for analysis, deconstruction, and quantitative reason- ing. For one, all of these things are part of the world too, they are aspects of our environment. If human ecology concerns itself with human-environment interactions and the place of human beings in an ecology, then we should see mathematics mathematics as an essentially human ecological venture. Mathematics are a secretive language of nature which rarely shares its secrets. While counting is not an exclusively human trait, the depth and variety of human counting techniques are unique in the animal world.</p>
<p>In the natural sciences, I believe the desire to model and replicate nature as an attempt to under- stand it can be traced back to European materialism, utilitarianism, and determinist philosophy of 17th century Europe. These frameworks travelled extensively through trade, and through the colonial rule and subjugation of nation states by European powers, and spread rapidly worldwide. I bring this up not to brush off the desire to model nature as an outdated cultural relic, but to illustrate that it is a worldview that exists in continuity with the cultures and writing of a very small group of people in a very small part of the world, and at a very specific time in history. We are perhaps needlessly limiting ourselves to a relationship to nature which in some capacity must factor in this lens.</p>
<p>I’ll end on counting as an interesting subject: counting - what counts? Pun intended. Do trees count? Are the processes through which trees grow and multiply, branch, and ache cognisant enough to count as ”counting”? Or are they just material reactions? And does it matter? Can an animate but inorganic process count?</p>
<div class="page" title="Page 2">
<div class="section">
<div class="layoutArea">
<div class="column">
<h2>Not-entirely deterministic systems</h2>
<div class="page" title="Page 2">
<div class="section">
<div class="layoutArea">
<div class="column">
<p>As a language of nature, mathematics has the enviable property that its descriptions of mathematical phenomena transcend mathematics into all dimensions of the natural world. If a mathematical phe- nomenon produces a certain type of behaviour, and as observers, we notice a similar phenomenon in nature, we can be quite certain certain that the natural phenomenon is related to the mathematical one. Even though the same process may not be a play in either one, both share a sameness, and this sameness opens a pathway to mathematics ←→ nature exchanges.</p>
<p>We are used to using mathematics to discover Nature, or using mathematics to explain it, but we hardly ever hear of the reverse: using nature to explore mathematics, to explain mathematics, or even as a map to mathematical exploration.</p>
<p>I have a strong hunch that mathematics discovered through this process, especially mathematical processes and algorithms discovered through such an approach would replicate the properties of pro- cesses that occur in nature. These processes would often be not entirely deterministic, part of not entirely deterministic systems, of which we understand very little today. Exploration of mathematics through nature might yield (with some luck and creative thinking) insight into the inner functioning of <span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">complex adaptive systems, and help us breakaway from a purely normative or descriptive understand- ing of mathematics which sees mathematics as either dictating nature’s inner workings, or passively reflecting it. Mathematics are a conceptual framework that abstracts relationships that occur in nature, but we only have use for mathematics insofar as they describe the nature that they are a part of. How could nature not describe maths, just as mathematical assertions assert the dynamics, relationships, and laws of nature?</span></p>
<div class="page" title="Page 3">
<div class="section">
<div class="layoutArea">
<div class="column">
<h2>Mathematics as a shimmer through a lens</h2>
<div class="page" title="Page 3">
<div class="section">
<div class="layoutArea">
<div class="column">
<p>To close this reflection piece, I’d like to consider one outcome of using nature as an exploratory tool for maths: L-systems.</p>
<p>L-systems are formal systems which use a combination of rules or substitution of symbols of a formal language for others using sometimes deterministic, sometimes stochastic, and sometimes a com- bination of both rules. L-systems were first discovered by Aristid Lindenmayer, a biologist who studied the growth patterns of bacteria such as the Anabaena catenula. Lindenmayer originally intended these systems to provide a formal description of the development of bacteria, and to illustrate the neigh- bourhood relationships between plant cells. However, they were quickly extended to describe larger organisms with branching structures such as plants.</p>
<p>The following figures showcase some structures generated through L-systems. As you view them, I would like to invite you to think of them not as a flawed mathematical representation of nature, but as a beautiful human enabled nature-informed representation of maths.</p>
<div class="gallery-wrapper"><div class="gallery"  data-is-empty="false" data-translation="Add images" data-columns="3">
<figure class="gallery__item"><a href="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/10/gallery/lsystem1.png" data-size="1802x786"><img loading="lazy" src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/10/gallery/lsystem1-thumbnail.png" alt="" width="768" height="335"></a></figure>
<figure class="gallery__item"><a href="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/10/gallery/lsystem2.png" data-size="1838x1200"><img loading="lazy" src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/10/gallery/lsystem2-thumbnail.png" alt="" width="768" height="501"></a></figure>
<figure class="gallery__item"><a href="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/10/gallery/lsystem3.png" data-size="1202x1146"><img loading="lazy" src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/10/gallery/lsystem3-thumbnail.png" alt="" width="768" height="732"></a></figure>
</div></div>
<div class="page" title="Page 4">
<div class="section">
<div class="layoutArea">
<div class="column">
<p><strong>Note:</strong> L-system models generated using Vlab on macOS, generously provided courtesy of the Al- gorithmic Botany lab at University of Calgary.</p>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
            ]]>
        </content>
    </entry>
    <entry>
        <title>An Exploration of the Logistic Function using GAMs and Spline Regressions in R</title>
        <author>
            <name>Phileas Dazeley-Gaist</name>
        </author>
        <link href="https://phileasdg.github.io/phileas-dazeley-gaist/logistic-model-bifurcation-regressions/"/>
        <id>https://phileasdg.github.io/phileas-dazeley-gaist/logistic-model-bifurcation-regressions/</id>
        <media:content url="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure14-2.png" medium="image" />
            <category term="Undergraduate work"/>
            <category term="R"/>
            <category term="Programming"/>

        <updated>2022-08-19T16:25:14-04:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure14-2.png" alt="" />
                    In this project, I will build nonlinear models using spline regressions, and&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure14-2.png" class="type:primaryImage" alt="" /></p>
                <p>In this project, I will build nonlinear models using spline regressions, and a general additive model to predict the initial conditions of sets of points of the bifurcation diagram (final state diagram) of the logistic function:</p>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/logistic_equation.png" alt="" width="382" height="55" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/logistic_equation-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/logistic_equation-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/logistic_equation-md.png 768w"></figure>
<h2>The bifurcation diagram of the logistic equation</h2>
<p>First, let’s briefly explore the bifurcation diagram of the logistic equation, which we can plot using the code below:</p>
<pre class="r"><code class="hljs">logistic_eq &lt;- <span class="hljs-keyword">function</span>(x, r){<span class="hljs-keyword">return</span>(r*x*(<span class="hljs-number">1</span>-x))}

x &lt;- seq(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>, length=<span class="hljs-number">500</span>) <span class="hljs-comment"># r scale</span>
y &lt;- c()

bifurcation_data &lt;- <span class="hljs-keyword">function</span>(r_values, x_0, min_iter=<span class="hljs-number">101</span>, max_iter=<span class="hljs-number">300</span>){
  <span class="hljs-keyword">for</span>(r <span class="hljs-keyword">in</span> r_values){
    new_y &lt;- x_0
    orbit &lt;- c()
    <span class="hljs-keyword">for</span>(i <span class="hljs-keyword">in</span> <span class="hljs-number">0</span>:max_iter){
      new_y &lt;- logistic_eq(new_y, r)
      <span class="hljs-keyword">if</span>(i &lt;  min_iter){<span class="hljs-keyword">next</span>}
      orbit &lt;- c(orbit, new_y)
    }
    y &lt;- c(y, tibble(orbit))
  }
  <span class="hljs-keyword">return</span>(tibble(x_0=x_0, r=x, final_state=y, iter_num=rep(tibble(min_iter:max_iter), 
                                                          length(r_values))))
}</code></pre>
<pre class="r"><code class="hljs">x_0 &lt;- <span class="hljs-number">0.5</span>

head(bifurcation_data(x, x_0))</code></pre>
<pre><code class="hljs">## # A tibble: 6 × 4
##     x_0       r final_state  iter_num    
##   &lt;dbl&gt;   &lt;dbl&gt; &lt;named list&gt; &lt;named list&gt;
## 1   0.5 0       &lt;dbl [200]&gt;  &lt;int [200]&gt; 
## 2   0.5 0.00802 &lt;dbl [200]&gt;  &lt;int [200]&gt; 
## 3   0.5 0.0160  &lt;dbl [200]&gt;  &lt;int [200]&gt; 
## 4   0.5 0.0240  &lt;dbl [200]&gt;  &lt;int [200]&gt; 
## 5   0.5 0.0321  &lt;dbl [200]&gt;  &lt;int [200]&gt; 
## 6   0.5 0.0401  &lt;dbl [200]&gt;  &lt;int [200]&gt;</code></pre>
<pre class="r"><code class="hljs">bifurcation_data(x, x_0) %&gt;% unnest(everything()) %&gt;% ggplot(aes(r, final_state)) + 
  geom_point(size=<span class="hljs-number">0.01</span>) + 
  labs(title=paste0(<span class="hljs-string">"Bifurcation diagram of the logistic equation for x_0 = "</span>, x_0)) +
  theme_tufte()</code></pre>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure1.png" alt="" width="1344" height="960" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure1-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure1-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure1-md.png 768w"></figure>
<p>The bifurcation diagram of the logistic equation, (also known as a final state diagram), shows the orbits of the logistic function <span class="math inline"><span id="MathJax-Element-2-Frame" class="MathJax" style="box-sizing: border-box; display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 14px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;" tabindex="0" role="presentation" data-mathml="&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;msub&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/msub&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;&amp;#x2212;&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/msub&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/math&gt;"><span id="MathJax-Span-22" class="math"><span id="MathJax-Span-23" class="mrow"><span id="MathJax-Span-24" class="msubsup"><span id="MathJax-Span-25" class="mi">x</span><span id="MathJax-Span-26" class="texatom"><span id="MathJax-Span-27" class="mrow"><span id="MathJax-Span-28" class="mi">n</span><span id="MathJax-Span-29" class="mo">+</span><span id="MathJax-Span-30" class="mn">1</span></span></span></span><span id="MathJax-Span-31" class="mo">=</span><span id="MathJax-Span-32" class="mi">r</span><span id="MathJax-Span-33" class="msubsup"><span id="MathJax-Span-34" class="mi">x</span><span id="MathJax-Span-35" class="mi">n</span></span><span id="MathJax-Span-36" class="mo">(</span><span id="MathJax-Span-37" class="mn">1</span><span id="MathJax-Span-38" class="mo">−</span><span id="MathJax-Span-39" class="msubsup"><span id="MathJax-Span-40" class="mi">x</span><span id="MathJax-Span-41" class="mi">n</span></span><span id="MathJax-Span-42" class="mo">)</span></span></span><span class="MJX_Assistive_MathML" role="presentation">xn+1=rxn(1−xn)</span></span></span> for values of <span class="math inline"><span id="MathJax-Element-3-Frame" class="MathJax" style="box-sizing: border-box; display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 14px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;" tabindex="0" role="presentation" data-mathml="&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;/math&gt;"><span id="MathJax-Span-43" class="math"><span id="MathJax-Span-44" class="mrow"><span id="MathJax-Span-45" class="mi">r</span></span></span><span class="MJX_Assistive_MathML" role="presentation">r</span></span></span> between 0 and 1. The resolution of the plot/set is determined by the cardinality of the set of <span class="math inline"><span id="MathJax-Element-4-Frame" class="MathJax" style="box-sizing: border-box; display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 14px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;" tabindex="0" role="presentation" data-mathml="&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;/math&gt;"><span id="MathJax-Span-46" class="math"><span id="MathJax-Span-47" class="mrow"><span id="MathJax-Span-48" class="mi">r</span></span></span><span class="MJX_Assistive_MathML" role="presentation">r</span></span></span> values used as the x axis, and the number of iterations computed by the <code>bifurcation_data()</code> function, plotted on the y axis. In the plot above, orbits were computed for 301 iterations, (iterations 0 to 300 as it is specified in the code), but the points corresponding to the first 101 iterations were skipped, resulting in a plot that ignores the beginning of the orbits. We could also choose to not skip iterates, which would result in a plot like the following:</p>
<p><strong>A plot of the bifurcation diagram points for x_0 = 0.5, with no iterates skipped:</strong></p>
<pre class="r"><code class="hljs">bifurcation_data(x, x_0, <span class="hljs-number">0</span>, <span class="hljs-number">300</span>) %&gt;% unnest(everything()) %&gt;% ggplot(aes(r, final_state)) + 
  geom_point(size=<span class="hljs-number">0.01</span>) + 
  labs(title=paste0(<span class="hljs-string">"Bifurcation diagram of the logistic equation for x_0 = "</span>, x_0)) +
  theme_tufte()</code></pre>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure2.png" alt="" width="1344" height="960" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure2-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure2-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure2-md.png 768w"></figure>
<p>For ease of computation and interpretability, in this project I will first constitute a working data set from which to produce visualisations and models from low-resolution data sets of points on the bifurcation diagram of the logistic equation. The resolution in r values and in number of iterations will be <code>resolution</code>, and <code>resolution</code> respectively, with no iterates skipped. I have plotted an example below:</p>
<p><strong>A plot of the lower resolution bifurcation diagram points for x_0 = 0.5:</strong></p>
<pre class="r"><code class="hljs">resolution &lt;- <span class="hljs-number">10</span> <span class="hljs-comment"># resolution, in number of units per dimension</span>

x &lt;- seq(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>, length=resolution) <span class="hljs-comment"># r scale</span>
bifurcation_data(x, x_0, <span class="hljs-number">0</span>, resolution-<span class="hljs-number">1</span>) %&gt;% unnest(everything()) %&gt;% ggplot(aes(r, final_state)) + 
  geom_point(size=<span class="hljs-number">0.01</span>) + 
  labs(title=paste0(<span class="hljs-string">"Bifurcation diagram of the logistic equation for x_0 = "</span>, x_0)) +
  theme_tufte()</code></pre>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure3-2.png" alt="" width="1344" height="960" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure3-2-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure3-2-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure3-2-md.png 768w"></figure>
<h2>Data generation and formatting</h2>
<p>Now that we’re a bit more comfortable with bifurcation diagram of the logistic equation conceptually, let’s collect the data we’ll need to visualise variation of initial conditions, and from which we could build a model to predict the initial conditions used to generate a set of points using iterations of the logistic equations for values in the set of <code>r</code> values <code>x</code>.</p>
<p>The following code will give us <code>resolution</code> r resolution by <code>resolution</code> iteration resolution point sets for <code>resolution</code> initial condition values between 0 and 1. Together, these variables form a <code>resolution^3</code> resolution 3d space which that data will occupy.</p>
<p>We’ll use a little higher resolution settings for our visualisations and data exploration:</p>
<pre class="r"><code class="hljs">resolution &lt;- <span class="hljs-number">60</span> <span class="hljs-comment"># resolution, in number of units per dimension</span>

x &lt;- seq(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>, length=resolution) <span class="hljs-comment"># r scale</span>
min_iter &lt;- <span class="hljs-number">0</span>; max_iter &lt;- resolution-<span class="hljs-number">1</span>
x_0s &lt;- seq(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, length=resolution)

data &lt;- tibble()
<span class="hljs-keyword">for</span>(x_0 <span class="hljs-keyword">in</span> x_0s){
  data &lt;- bind_rows(data, bifurcation_data(r=x, x_0, min_iter, max_iter))
}</code></pre>
<p>Let’s preview the data by peeking at the data tibble:</p>
<pre class="r"><code class="hljs">head(data)</code></pre>
<div id="data-generation-and-formatting" class="section level2">
<pre><code class="hljs">## # A tibble: 6 × 4
##     x_0      r final_state  iter_num    
##   &lt;dbl&gt;  &lt;dbl&gt; &lt;named list&gt; &lt;named list&gt;
## 1     0 0      &lt;dbl [60]&gt;   &lt;int [60]&gt;  
## 2     0 0.0678 &lt;dbl [60]&gt;   &lt;int [60]&gt;  
## 3     0 0.136  &lt;dbl [60]&gt;   &lt;int [60]&gt;  
## 4     0 0.203  &lt;dbl [60]&gt;   &lt;int [60]&gt;  
## 5     0 0.271  &lt;dbl [60]&gt;   &lt;int [60]&gt;  
## 6     0 0.339  &lt;dbl [60]&gt;   &lt;int [60]&gt;</code></pre>
</div>
<div id="data-exploration-and-visualisation" class="section level2">
<h2>Data exploration and visualisation</h2>
<p>Let’s also preview the data graphically altogether as a scatter plot:</p>
<pre class="r"><code class="hljs">data %&gt;% unnest(everything()) %&gt;% 
  ggplot(aes(r, final_state, colour=x_0)) + 
  geom_point(size=<span class="hljs-number">0.01</span>) + 
  scale_colour_gradientn(colours = rainbow(<span class="hljs-number">10</span>)) + <span class="hljs-comment"># + theme(legend.position = "none")</span>
  theme_tufte()</code></pre>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure4.png" alt="" width="1344" height="960" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure4-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure4-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure4-md.png 768w"></figure>
<p>The scatter plot gives us limited insight because values are stacked upon one another. But we can plot the <code>x_0</code> axis in the third dimension, as a 3d point cloud, as below:</p>
<pre class="r"><code class="hljs">data %&gt;% unnest(everything()) %&gt;% plot_ly(data=., 
                                          x = ~r, 
                                          y = ~x_0, 
                                          z = ~final_state,
                                          color = ~iter_num,
                                          colors=viridis(<span class="hljs-number">50</span>, alpha = <span class="hljs-number">1</span>, begin = <span class="hljs-number">0</span>, end = <span class="hljs-number">1</span>, direction = <span class="hljs-number">1</span>),
                                          marker = list(size = <span class="hljs-number">1</span>,
                                                        colorbar=list(title=<span class="hljs-string">"iteration number"</span>),
                                                        reversescale=<span class="hljs-literal">F</span>)) %&gt;% 
  add_markers() %&gt;% 
  layout(scene=list(xaxis = list(title = <span class="hljs-string">"r"</span>),
                    yaxis = list(title = <span class="hljs-string">"x_0"</span>),
                    zaxis = list(title = <span class="hljs-string">"final state"</span>), 
                    camera = list(eye = list(x = -<span class="hljs-number">1.25</span>, y = <span class="hljs-number">1.25</span>, z = <span class="hljs-number">1.25</span>))))</code></pre>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure5.png" alt="" width="1404" height="890" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure5-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure5-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure5-md.png 768w"></figure>
<p>Note that the structure produced by the point cloud in the plot above has symmetry along the <code>x_0</code> axis. This tells us that for any r value and iteration step, a function cannot approach the orbit values for an initial condition between 0 and 1, as there will be two initial conditions for which the orbits are identical.</p>
<p>However, all hope is not lost! The good news is that we can make a cheaper model that will work just as well! All we need to do is to cut the data set in half so as to contain only <code><span class="math inline"><span id="MathJax-Element-7-Frame" class="MathJax" style="box-sizing: border-box; display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 14px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;" tabindex="0" role="presentation" data-mathml="&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;msub&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;/msub&gt;&lt;/math&gt;"><span id="MathJax-Span-66" class="math"><span id="MathJax-Span-67" class="mrow"><span id="MathJax-Span-68" class="msubsup"><span id="MathJax-Span-69" class="mi">x_</span><span id="MathJax-Span-70" class="mn">0</span></span></span></span></span></span></code> values above or below <code>0.5</code> to obtain non-mirrored data for which the orbit coordinates for an iteration step and r value can be approached by a deterministic function.</p>
<p>While we’re at it, let’s also visualise how the orbits gravitate towards a shape constituted of final states as the logistic equation is iterated:</p>
<pre class="r"><code class="hljs">data %&gt;% unnest(everything()) %&gt;% plot_ly(data=., 
                                          x = ~r, 
                                          y = ~iter_num, 
                                          z = ~final_state,
                                          color = ~x_0,
                                          colors=viridis(<span class="hljs-number">50</span>, alpha = <span class="hljs-number">1</span>, begin = <span class="hljs-number">0</span>, end = <span class="hljs-number">1</span>, direction = <span class="hljs-number">1</span>),
                                          marker = list(size = <span class="hljs-number">1</span>,
                                                        reversescale=<span class="hljs-literal">F</span>)) %&gt;% 
  add_markers() %&gt;% 
  layout(scene=list(xaxis = list(title = <span class="hljs-string">"r"</span>),
                    yaxis = list(title = <span class="hljs-string">"iteration number"</span>),
                    zaxis = list(title = <span class="hljs-string">"orbit values"</span>), 
                    camera = list(eye = list(x = -<span class="hljs-number">1.25</span>, y = <span class="hljs-number">1.25</span>, z = <span class="hljs-number">1.25</span>))))</code></pre>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure6.png" alt="" width="1324" height="886" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure6-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure6-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure6-md.png 768w"></figure>
<p>And let’s observe how the initial condition <code>x_0</code> affects the orbit values at different iterations:</p>
<pre class="r"><code class="hljs">data %&gt;% unnest(everything()) %&gt;% plot_ly(data=., 
                                          x = ~x_0, 
                                          y = ~iter_num, 
                                          z = ~final_state,
                                          color = ~r,
                                          colors=viridis(<span class="hljs-number">50</span>, alpha = <span class="hljs-number">1</span>, begin = <span class="hljs-number">0</span>, end = <span class="hljs-number">1</span>, direction = <span class="hljs-number">1</span>),
                                          marker = list(size = <span class="hljs-number">1</span>,
                                                        reversescale=<span class="hljs-literal">F</span>)) %&gt;% 
  add_markers() %&gt;% 
  layout(scene=list(xaxis = list(title = <span class="hljs-string">"x_0"</span>),
                    yaxis = list(title = <span class="hljs-string">"iteration number"</span>),
                    zaxis = list(title = <span class="hljs-string">"orbit values"</span>), 
                    camera = list(eye = list(x = <span class="hljs-number">1.25</span>, y = -<span class="hljs-number">1.25</span>, z = <span class="hljs-number">1.25</span>))))</code></pre>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure7.png" alt="" width="1232" height="902" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure7-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure7-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure7-md.png 768w"></figure>
<p>Let’s take slices of <code>x_0</code> by final state at different iteration numbers values and have a look at the shapes they form. But first, let’s generate higher resolution data to get nicer, more detailed plots.</p>
<pre class="r"><code class="hljs">resolution &lt;- <span class="hljs-number">200</span> <span class="hljs-comment"># resolution, in number of units per dimension</span>
x &lt;- seq(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>, length=resolution) <span class="hljs-comment"># r scale</span>
min_iter &lt;- <span class="hljs-number">0</span>; max_iter &lt;- <span class="hljs-number">100</span>
x_0s &lt;- seq(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, length=resolution)

data &lt;- tibble()
<span class="hljs-keyword">for</span>(x_0 <span class="hljs-keyword">in</span> x_0s){
  data &lt;- bind_rows(data, bifurcation_data(r=x, x_0, min_iter, max_iter))
}</code></pre>
<p>Let’s preview a few slices:</p>
<pre class="r"><code class="hljs">data %&gt;% unnest(everything()) %&gt;% filter(iter_num==iter_num[<span class="hljs-number">1</span>]) %&gt;% 
  ggplot(aes(x_0, final_state, alpha=r)) + geom_point(size=<span class="hljs-number">0.1</span>) + 
  labs(title=paste0(<span class="hljs-string">"Orbit value by initial condition for iterate "</span>, <span class="hljs-number">1</span>),
       y=<span class="hljs-string">"orbit values"</span>) +
  theme_tufte()</code></pre>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure8.png" alt="" width="1344" height="960" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure8-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure8-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure8-md.png 768w"></figure>
<pre class="r"><code class="hljs">data %&gt;% unnest(everything()) %&gt;% filter(iter_num==iter_num[<span class="hljs-number">5</span>]) %&gt;% 
  ggplot(aes(x_0, final_state, alpha=r)) + geom_point(size=<span class="hljs-number">0.1</span>) + 
  labs(title=paste0(<span class="hljs-string">"Orbit value by initial condition for iterate "</span>, <span class="hljs-number">5</span>),
       y=<span class="hljs-string">"orbit values"</span>) +
  theme_tufte()</code></pre>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure9.png" alt="" width="1344" height="960" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure9-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure9-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure9-md.png 768w"></figure>
<pre class="r"><code class="hljs">data %&gt;% unnest(everything()) %&gt;% filter(iter_num==iter_num[<span class="hljs-number">25</span>]) %&gt;% 
  ggplot(aes(x_0, final_state, alpha=r)) + geom_point(size=<span class="hljs-number">0.1</span>) + 
  labs(title=paste0(<span class="hljs-string">"Orbit value by initial condition for iterate "</span>, <span class="hljs-number">25</span>),
       y=<span class="hljs-string">"orbit values"</span>) +
  theme_tufte()</code></pre>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure10.png" alt="" width="1344" height="960" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure10-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure10-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure10-md.png 768w"></figure>
<pre class="r"><code class="hljs">data %&gt;% unnest(everything()) %&gt;% filter(iter_num==iter_num[<span class="hljs-number">50</span>]) %&gt;% 
  ggplot(aes(x_0, final_state, alpha=r)) + geom_point(size=<span class="hljs-number">0.1</span>) + 
  labs(title=paste0(<span class="hljs-string">"Orbit value by initial condition for iterate "</span>, <span class="hljs-number">50</span>),
       y=<span class="hljs-string">"orbit values"</span>) +
  theme_tufte()</code></pre>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure11.png" alt="" width="1344" height="960" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure11-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure11-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure11-md.png 768w"></figure>
<pre class="r"><code class="hljs">data %&gt;% unnest(everything()) %&gt;% filter(iter_num==iter_num[<span class="hljs-number">100</span>]) %&gt;% 
  ggplot(aes(x_0, final_state, alpha=r)) + geom_point(size=<span class="hljs-number">0.1</span>) + 
  labs(title=paste0(<span class="hljs-string">"Orbit value by initial condition for iterate "</span>, <span class="hljs-number">100</span>),
       y=<span class="hljs-string">"orbit values"</span>) +
  theme_tufte()</code></pre>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure12.png" alt="" width="1344" height="960" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure12-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure12-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure12-md.png 768w"></figure>
<p>Optionally, we couls save an image sequence for <code>iter_num</code> values</p>
<pre class="r"><code class="hljs"><span class="hljs-comment"># iter_num &lt;- min_iter:max_iter</span>
<span class="hljs-comment"># for(i in iter_num){ # add in [1:10] when done with animation</span>
<span class="hljs-comment">#   plot &lt;- data %&gt;% unnest(everything()) %&gt;% filter(iter_num==i) %&gt;%</span>
<span class="hljs-comment">#     ggplot(aes(x_0, final_state, alpha=r/4)) +</span>
<span class="hljs-comment">#     geom_point(size=0.1) +</span>
<span class="hljs-comment">#     labs(title=paste0("Orbit value by initial condition for iterate ", i),</span>
<span class="hljs-comment">#          y = "orbit values") +</span>
<span class="hljs-comment">#     theme_tufte()</span>
<span class="hljs-comment">#   ggsave(paste0("image sequences/final state by initial condition by iterate line plot/", "orbit values by initial condition for iterate ", i, ".png"),</span>
<span class="hljs-comment">#          width=30, height=20, units="cm")</span>
<span class="hljs-comment"># }</span></code></pre>
<p>The code above results in the following animation sequence: <span class="math inline"><span id="MathJax-Element-11-Frame" class="MathJax" style="box-sizing: border-box; display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 14px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;" tabindex="0" role="presentation" data-mathml="&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mrow href=&quot;https://youtu.be/mmFu3PikEsc&quot;&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mo&gt;:&lt;/mo&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mo&gt;/&lt;/mo&gt;&lt;/mrow&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mo&gt;/&lt;/mo&gt;&lt;/mrow&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mo&gt;.&lt;/mo&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mrow class=&quot;MJX-TeXAtom-ORD&quot;&gt;&lt;mo&gt;/&lt;/mo&gt;&lt;/mrow&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;/mrow&gt;&lt;/math&gt;"><span id="MathJax-Span-84" class="math"><span id="MathJax-Span-85" class="mrow"><span id="MathJax-Span-86" class="mrow"><span id="MathJax-Span-87" class="mi">h</span><span id="MathJax-Span-88" class="mi">t</span><span id="MathJax-Span-89" class="mi">t</span><span id="MathJax-Span-90" class="mi">p</span><span id="MathJax-Span-91" class="mi">s</span><span id="MathJax-Span-92" class="mo">:</span><span id="MathJax-Span-93" class="texatom"><span id="MathJax-Span-94" class="mrow"><span id="MathJax-Span-95" class="mo">/</span></span></span><span id="MathJax-Span-96" class="texatom"><span id="MathJax-Span-97" class="mrow"><span id="MathJax-Span-98" class="mo">/</span></span></span><span id="MathJax-Span-99" class="mi">y</span><span id="MathJax-Span-100" class="mi">o</span><span id="MathJax-Span-101" class="mi">u</span><span id="MathJax-Span-102" class="mi">t</span><span id="MathJax-Span-103" class="mi">u</span><span id="MathJax-Span-104" class="mo">.</span><span id="MathJax-Span-105" class="mi">b</span><span id="MathJax-Span-106" class="mi">e</span><span id="MathJax-Span-107" class="texatom"><span id="MathJax-Span-108" class="mrow"><span id="MathJax-Span-109" class="mo">/</span></span></span><span id="MathJax-Span-110" class="mi">m</span><span id="MathJax-Span-111" class="mi">m</span><span id="MathJax-Span-112" class="mi">F</span><span id="MathJax-Span-113" class="mi">u</span><span id="MathJax-Span-114" class="mn">3</span><span id="MathJax-Span-115" class="mi">P</span><span id="MathJax-Span-116" class="mi">i</span><span id="MathJax-Span-117" class="mi">k</span><span id="MathJax-Span-118" class="mi">E</span><span id="MathJax-Span-119" class="mi">s</span><span id="MathJax-Span-120" class="mi">c</span></span></span></span></span></span></p>
<p>Let’s reset the resolution to our working resolution:</p>
<pre class="r"><code class="hljs">resolution &lt;- <span class="hljs-number">60</span> <span class="hljs-comment"># resolution, in number of units per dimension</span>
x &lt;- seq(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>, length=resolution) <span class="hljs-comment"># r scale</span>
min_iter &lt;- <span class="hljs-number">0</span>; max_iter &lt;- resolution-<span class="hljs-number">1</span>
x_0s &lt;- seq(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, length=resolution)

data &lt;- tibble()
<span class="hljs-keyword">for</span>(x_0 <span class="hljs-keyword">in</span> x_0s){
  data &lt;- bind_rows(data, bifurcation_data(r=x, x_0, min_iter, max_iter))
}</code></pre>
<p>Finally, let’s observe how orbit values for different iteration steps and initial conditions form a 3d object with a fuzzy or spiky upper boundary in the <span class="math inline"><span id="MathJax-Element-12-Frame" class="MathJax" style="box-sizing: border-box; display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 14px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;" tabindex="0" role="presentation" data-mathml="&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;/math&gt;"><span id="MathJax-Span-121" class="math"><span id="MathJax-Span-122" class="mrow"><span id="MathJax-Span-123" class="mi">r</span></span></span><span class="MJX_Assistive_MathML" role="presentation">r</span></span></span> dimension.</p>
<pre class="r"><code class="hljs">data %&gt;% unnest(everything()) %&gt;% mutate(orbit_values=final_state) %&gt;% 
  plot_ly(data=., 
          x = ~x_0, 
          y = ~iter_num, 
          z = ~r,
          color = ~orbit_values,
          colors=viridis(<span class="hljs-number">50</span>, alpha = <span class="hljs-number">1</span>, begin = <span class="hljs-number">0</span>, end = <span class="hljs-number">1</span>, direction = <span class="hljs-number">1</span>) ,
          marker = list(size = <span class="hljs-number">1</span>,
                        reversescale=<span class="hljs-literal">F</span>,
                        opacity = ~final_state)) %&gt;% 
  add_markers() %&gt;% 
  layout(scene=list(xaxis = list(title = <span class="hljs-string">"x_0"</span>),
                    yaxis = list(title = <span class="hljs-string">"iteration number"</span>),
                    zaxis = list(title = <span class="hljs-string">"r"</span>)))</code></pre>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure13.png" alt="" width="1274" height="906" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure13-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure13-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure13-md.png 768w"></figure>
<h2>Model-planning considerations</h2>
<p>Now that we have a solid understanding of the shape of our data set, we can design a modelling approach.</p>
<p>The goal is to predict the initial condition <span class="math inline"><span id="MathJax-Element-13-Frame" class="MathJax" style="box-sizing: border-box; display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 14px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;" tabindex="0" role="presentation" data-mathml="&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;msub&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;/msub&gt;&lt;/math&gt;"><span id="MathJax-Span-124" class="math"><span id="MathJax-Span-125" class="mrow"><span id="MathJax-Span-126" class="msubsup"><span id="MathJax-Span-127" class="mi">x</span><span id="MathJax-Span-128" class="mn">0</span></span></span></span><span class="MJX_Assistive_MathML" role="presentation">x0</span></span></span> used to produce a bifurcation diagram. In other words, we are going to construct a model using <code>final_state</code> orbit values + <code>r</code> + <code>iter_num</code> to predict <code>x_0</code>.</p>
<p>I hypothesise that it will be easier to produce models with high predictive power and reliability for early iterations, and for <code>r</code> values under 3, but that predictive power will tend to be harder to maintain for later iterations, or most values or <code>r</code> above 3.</p>
<p>We can confirm this hypothesis quite easily: Firstly, simply compare the orbit values for an initial condition at earlier iterations to those at later iterations. You will see that the earlier iterations result in distinct plots which overlap little and appear to be approachable by the curves of a function. Conversely, later iterations, such as those 55 and above plotted below appear less describable by curves due to their chaotic behaviour, and overlap exactly in the non-chaotic regions of the plot.</p>
<pre class="r"><code class="hljs">data %&gt;% unnest(everything()) %&gt;% 
  filter(iter_num&lt;<span class="hljs-number">5</span>) %&gt;% filter(x_0==x_0s[<span class="hljs-number">25</span>]) %&gt;% 
  ggplot(aes(r, final_state, colour=as.factor(iter_num))) + 
  geom_line(aes(group=as.factor(iter_num))) +
  geom_point(alpha=<span class="hljs-number">0.4</span>) +
  theme_tufte() +
  labs(title=paste0(<span class="hljs-string">"Bifurcation diagram of the logistic map points \nfor x_0 = "</span>, 
                    round(x_0s[<span class="hljs-number">25</span>], <span class="hljs-number">2</span>),<span class="hljs-string">" and iterates [0 - 5)"</span>), y=<span class="hljs-string">"orbit values"</span>) +
  theme(legend.position = <span class="hljs-string">"none"</span>)</code></pre>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure14.png" alt="" width="1344" height="960" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure14-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure14-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure14-md.png 768w"></figure>
<pre class="r"><code class="hljs">data %&gt;% unnest(everything()) %&gt;% 
  filter(iter_num&gt;=<span class="hljs-number">55</span>) %&gt;% filter(x_0==x_0s[<span class="hljs-number">25</span>]) %&gt;% 
  ggplot(aes(r, final_state, colour=as.factor(iter_num))) + 
  geom_line(aes(group=as.factor(iter_num))) +
  geom_point(alpha=<span class="hljs-number">0.4</span>) +
  theme_tufte() +
  labs(title=paste0(<span class="hljs-string">"Bifurcation diagram of the logistic map points \nfor x_0 = "</span>, 
                    round(x_0s[<span class="hljs-number">25</span>], <span class="hljs-number">2</span>),<span class="hljs-string">" and iterates [55 - 60)"</span>), y=<span class="hljs-string">"orbit values"</span>) +
  theme(legend.position = <span class="hljs-string">"none"</span>)</code></pre>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure15.png" alt="" width="1344" height="960" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure15-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure15-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure15-md.png 768w"></figure>
<p>We can also note that points where <span class="math inline"><span id="MathJax-Element-16-Frame" class="MathJax" style="box-sizing: border-box; display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 14px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;" tabindex="0" role="presentation" data-mathml="&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mo&gt;&amp;#x2265;&lt;/mo&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;/math&gt;"><span id="MathJax-Span-135" class="math"><span id="MathJax-Span-136" class="mrow"><span id="MathJax-Span-137" class="mi">r</span><span id="MathJax-Span-138" class="mo">≥</span><span id="MathJax-Span-139" class="mn">3</span></span></span><span class="MJX_Assistive_MathML" role="presentation">r≥3</span></span></span> are less approachable by curves. Comparing the following plots should help convey this behaviour more intiutively:</p>
<pre class="r"><code class="hljs">data %&gt;% unnest(everything()) %&gt;% 
  filter(r==x[<span class="hljs-number">15</span>]) %&gt;% 
  ggplot(aes(iter_num, final_state, colour=as.factor(x_0))) + 
  geom_line(aes(group=as.factor(x_0)), alpha=<span class="hljs-number">0.2</span>) +
  labs(title=paste0(<span class="hljs-string">"Orbits for different initial conditions, r = "</span>, 
                    round(x[<span class="hljs-number">15</span>], <span class="hljs-number">3</span>)), x=<span class="hljs-string">"x_n"</span>, y=<span class="hljs-string">"orbit values"</span>) + 
  theme_tufte() +
  theme(legend.position = <span class="hljs-string">"none"</span>)</code></pre>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure16.png" alt="" width="1344" height="960" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure16-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure16-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure16-md.png 768w"></figure>
<pre class="r"><code class="hljs">data %&gt;% unnest(everything()) %&gt;% 
  filter(r==x[<span class="hljs-number">20</span>]) %&gt;% 
  ggplot(aes(iter_num, final_state, colour=as.factor(x_0))) + 
  geom_line(aes(group=as.factor(x_0)), alpha=<span class="hljs-number">0.2</span>) +
  labs(title=paste0(<span class="hljs-string">"Orbits for different initial conditions, r = "</span>, 
                    round(x[<span class="hljs-number">20</span>], <span class="hljs-number">3</span>)), x=<span class="hljs-string">"x_n"</span>, y=<span class="hljs-string">"orbit values"</span>) + 
  theme_tufte() +
  theme(legend.position = <span class="hljs-string">"none"</span>)</code></pre>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure17.png" alt="" width="1344" height="960" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure17-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure17-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure17-md.png 768w"></figure>
<pre class="r"><code class="hljs">data %&gt;% unnest(everything()) %&gt;% 
  filter(r==x[<span class="hljs-number">59</span>]) %&gt;% 
  ggplot(aes(iter_num, final_state, colour=as.factor(x_0))) + 
  geom_line(aes(group=as.factor(x_0)), alpha=<span class="hljs-number">0.2</span>) +
  labs(title=paste0(<span class="hljs-string">"Orbits for different initial conditions, r = "</span>, 
                    round(x[<span class="hljs-number">59</span>], <span class="hljs-number">3</span>)), x=<span class="hljs-string">"x_n"</span>, y=<span class="hljs-string">"orbit values"</span>) + 
  theme_tufte() +
  theme(legend.position = <span class="hljs-string">"none"</span>)</code></pre>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure18.png" alt="" width="1344" height="960" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure18-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure18-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure18-md.png 768w"></figure>
<h2>Model</h2>
<p>We’ve seen from the data exploration above that we should build our model on a subset of the data composed of early iterates orbit values, at one value of <code>r</code>.</p>
<pre class="r"><code class="hljs">resolution &lt;- <span class="hljs-number">200</span> <span class="hljs-comment"># resolution, in number of units per dimension</span>
x &lt;- seq(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>, length=resolution) <span class="hljs-comment"># r scale</span>
min_iter &lt;- <span class="hljs-number">0</span>; max_iter &lt;- resolution-<span class="hljs-number">1</span>
x_0s &lt;- seq(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, length=resolution)

data &lt;- tibble()
<span class="hljs-keyword">for</span>(x_0 <span class="hljs-keyword">in</span> x_0s){
  data &lt;- bind_rows(data, bifurcation_data(r=x, x_0, min_iter, max_iter))
}</code></pre>
<p>Let’s start by selecting values to test our proof of concept.</p>
<pre class="r"><code class="hljs">model_iterate_value &lt;- <span class="hljs-number">0</span>
model_r_value &lt;- x[round(resolution/<span class="hljs-number">2</span>, <span class="hljs-number">0</span>)]</code></pre>
<p>Now, let’s split our data into training and testing sets.</p>
<pre class="r"><code class="hljs">set.seed(<span class="hljs-number">1</span>)

data_unnested &lt;- data %&gt;% unnest(everything()) %&gt;% 
  filter(x_0 &lt;= <span class="hljs-number">0.5</span>) %&gt;% 
  filter(iter_num == model_iterate_value) %&gt;% filter(r == model_r_value)

index &lt;- createDataPartition(data_unnested$x_0, p = <span class="hljs-number">.8</span>, list=<span class="hljs-literal">FALSE</span>)
training_data &lt;- data_unnested[ index,]
test_data  &lt;- data_unnested[-index,]</code></pre>
<p>And let’s create our training vectors from the training data set.</p>
<pre class="r"><code class="hljs">x_0 &lt;- training_data$x_0 
final_state &lt;- training_data$final_state

IV &lt;- final_state <span class="hljs-comment"># predictor variables</span>
DV &lt;- x_0 <span class="hljs-comment"># response variable</span></code></pre>
<p>We’re finally ready! Let’s run a smooth spline regression on our training data, and test it on our test data set.</p>
<pre class="r"><code class="hljs"><span class="hljs-comment"># Let's try to perform a smooth spline regression:</span>
final_smooth_model &lt;- npreg::ss(DV, IV)
final_smooth_model</code></pre>
<pre><code class="hljs">## 
## Call:
## npreg::ss(x = DV, y = IV)
## 
## Smoothing Parameter  spar = -0.3288175   lambda = 2.509954e-10
## Equivalent Degrees of Freedom (Df) 54.60317
## Penalized Criterion (RSS) 1.517007e-10
## Generalized Cross-Validation (GCV) 1.881561e-11</code></pre>
<pre class="r"><code class="hljs">summary(final_smooth_model)</code></pre>
<pre><code class="hljs">## 
## Call:
## npreg::ss(x = DV, y = IV)
## 
## Residuals:
##        Min         1Q     Median         3Q        Max 
## -5.400e-06 -1.858e-07  5.613e-09  1.779e-07  9.054e-06 
## 
## Approx. Signif. of Parametric Effects:
##             Estimate Std. Error t value Pr(&gt;|t|)    
## (Intercept)   0.3308  3.046e-07 1086254        0 ***
## x             0.4975  3.368e-06  147709        0 ***
## ---
## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
## 
## Approx. Signif. of Nonparametric Effects:
##             Df    Sum Sq   Mean Sq   F value Pr(&gt;F)    
## s(x)      52.6 1.104e-01 2.099e-03 351395897      0 ***
## Residuals 25.4 1.517e-10 5.973e-12                     
## ---
## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 
## 
## Residual standard error: 2.444e-06 on 25.4 degrees of freedom
## Multiple R-squared:  1,    Adjusted R-squared:  1
## F-statistic: 344834510 on 53.6 and 25.4 DF,  p-value: &lt;2e-16</code></pre>
<pre class="r"><code class="hljs">final_smooth_model$fit$knot</code></pre>
<pre><code class="hljs">##  [1] 0.000000000 0.005025126 0.015075377 0.025125628 0.030150754 0.045226131
##  [7] 0.050251256 0.055276382 0.070351759 0.075376884 0.085427136 0.090452261
## [13] 0.095477387 0.110552764 0.120603015 0.130653266 0.135678392 0.140703518
## [19] 0.150753769 0.155778894 0.170854271 0.180904523 0.190954774 0.195979899
## [25] 0.201005025 0.216080402 0.221105528 0.241206030 0.246231156 0.251256281
## [31] 0.261306533 0.266331658 0.281407035 0.286432161 0.296482412 0.311557789
## [37] 0.316582915 0.326633166 0.336683417 0.346733668 0.356783920 0.361809045
## [43] 0.371859296 0.376884422 0.396984925 0.402010050 0.407035176 0.417085427
## [49] 0.422110553 0.432160804 0.437185930 0.442211055 0.452261307 0.457286432
## [55] 0.482412060 0.487437186 0.497487437</code></pre>
<pre class="r"><code class="hljs">length(final_smooth_model$fi$knot)</code></pre>
<pre><code class="hljs">## [1] 57</code></pre>
<pre class="r"><code class="hljs">pred &lt;- predict(final_smooth_model, test_data$x_0)
print(paste(<span class="hljs-string">"RMSE:"</span>, rmse(pred$y, test_data$x_0)))</code></pre>
<pre><code class="hljs">## [1] "RMSE: 0.0919509218319031"</code></pre>
<pre class="r"><code class="hljs">test_data %&gt;% 
        ggplot(aes(x = final_state, y = x_0)) + 
        stat_smooth(method = <span class="hljs-string">"gam"</span>, formula = y ~ bs(x, k = <span class="hljs-number">50</span>), color = <span class="hljs-string">"springgreen3"</span>) +
        geom_point() + 
        labs(x = <span class="hljs-string">"orbit values"</span>, y = <span class="hljs-string">"x_0"</span>, 
       title = paste0(<span class="hljs-string">"Smooth spline regression on orbit values \nof the logistic equation at iterate = "</span>, 
                      model_iterate_value, <span class="hljs-string">", and r = "</span>, round(model_r_value, <span class="hljs-number">2</span>))) + 
        theme_tufte() </code></pre>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure19.png" alt="" width="1344" height="960" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure19-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure19-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure19-md.png 768w"></figure>
<p>Excellent! But can we do better? What if we tried to fit a spline of any degree on our data?</p>
<pre class="r"><code class="hljs"><span class="hljs-comment"># We can also fit a spline of any degree, which in this case, should give us excellent results: </span>
any_degree_spline_model &lt;- lm(DV ~ ns(IV, df = <span class="hljs-number">12</span>), data = data_unnested)
summary(any_degree_spline_model)</code></pre>
<pre><code class="hljs">## 
## Call:
## lm(formula = DV ~ ns(IV, df = 12), data = data_unnested)
## 
## Residuals:
##        Min         1Q     Median         3Q        Max 
## -0.0053647 -0.0000552 -0.0000012  0.0000517  0.0067825 
## 
## Coefficients:
##                     Estimate Std. Error t value Pr(&gt;|t|)    
## (Intercept)       -9.551e-05  9.459e-04  -0.101     0.92    
## ns(IV, df = 12)1   8.115e-02  1.268e-03  64.007   &lt;2e-16 ***
## ns(IV, df = 12)2   1.196e-01  1.621e-03  73.759   &lt;2e-16 ***
## ns(IV, df = 12)3   1.594e-01  1.470e-03 108.406   &lt;2e-16 ***
## ns(IV, df = 12)4   1.995e-01  1.571e-03 126.951   &lt;2e-16 ***
## ns(IV, df = 12)5   2.421e-01  1.544e-03 156.777   &lt;2e-16 ***
## ns(IV, df = 12)6   2.854e-01  1.577e-03 180.897   &lt;2e-16 ***
## ns(IV, df = 12)7   3.266e-01  1.533e-03 213.047   &lt;2e-16 ***
## ns(IV, df = 12)8   3.665e-01  1.507e-03 243.251   &lt;2e-16 ***
## ns(IV, df = 12)9   4.079e-01  1.461e-03 279.250   &lt;2e-16 ***
## ns(IV, df = 12)10  4.268e-01  1.126e-03 378.958   &lt;2e-16 ***
## ns(IV, df = 12)11  5.091e-01  2.381e-03 213.851   &lt;2e-16 ***
## ns(IV, df = 12)12  4.666e-01  8.857e-04 526.773   &lt;2e-16 ***
## ---
## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
## 
## Residual standard error: 0.001356 on 67 degrees of freedom
## Multiple R-squared:  0.9999, Adjusted R-squared:  0.9999 
## F-statistic: 7.731e+04 on 12 and 67 DF,  p-value: &lt; 2.2e-16</code></pre>
<pre class="r"><code class="hljs">pred &lt;- predict(any_degree_spline_model, test_data)</code></pre>
<pre><code class="hljs">## Warning: 'newdata' had 20 rows but variables found have 80 rows</code></pre>
<pre class="r"><code class="hljs">print(paste(<span class="hljs-string">"RMSE:"</span>, RMSE(pred, test_data$x_0)))</code></pre>
<pre><code class="hljs">## [1] "RMSE: 0.176476254615616"</code></pre>
<pre class="r"><code class="hljs">test_data %&gt;% 
  ggplot(aes(x = final_state, y = x_0)) + 
  geom_smooth(method = lm, color = <span class="hljs-string">"springgreen3"</span>, 
              formula = y ~ ns(x, df = <span class="hljs-number">12</span>)) + 
  geom_point() + 
  labs(x = <span class="hljs-string">"orbit values"</span>, y = <span class="hljs-string">"x_0"</span>, 
       title = paste0(<span class="hljs-string">"Any degree spline regression on orbit values \nof the logistic equation at iterate = "</span>, 
                      model_iterate_value, <span class="hljs-string">", and r = "</span>, round(model_r_value, <span class="hljs-number">2</span>))) +
  theme_tufte()</code></pre>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure20.png" alt="" width="1344" height="960" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure20-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure20-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure20-md.png 768w"></figure>
<p>Perfect! That’s a really stellar fit! (But it makes sense, because the original data came from a smooth clean function!) In principle, it should be possible to choose any slice of the original data set for unique iterate number and r value combinations, and perform a spline regression on them to very reliably predict the initial condition used to generate the set of points on the bifurcation diagram of the logistic equation.</p>
<p>Talking about slices is all fine and dandy, but what exactly do I mean? Let’s take a look at the next plot to get a better idea! Note: in the following plot, the slice on which we built our last model is coloured in red.</p>
<p><strong>Examining the space of possible models visually:</strong> This is also the same as looking at a multivariate model in 3d, in fact now that I’ve mentioned multivariate models, let’s make a multivariate model corresponding to this surface!</p>
<pre class="r"><code class="hljs">data %&gt;% unnest(everything()) %&gt;% 
  filter(iter_num == model_iterate_value) %&gt;% 
  mutate(r_focus=if_else(r==model_r_value, <span class="hljs-literal">T</span>, <span class="hljs-literal">F</span>)) %&gt;% 
  filter(x_0 &lt; <span class="hljs-number">0.5</span>) %&gt;% 
  plot_ly(data=., 
          x = ~r, 
          y = ~x_0, 
          z = ~final_state, 
          color = ~r_focus,
          colors = c(<span class="hljs-string">"turquoise"</span>, <span class="hljs-string">"red"</span>),
          marker = list(size = <span class="hljs-number">1</span>,
                        reversescale=<span class="hljs-literal">F</span>)) %&gt;% 
  add_markers() %&gt;%
  layout(title = paste0(<span class="hljs-string">"Model surface: all models approachable \nby splines for initial conditions \nbetween 0 and 1, at iteration step "</span>, model_iterate_value),
         scene=list(xaxis = list(title = <span class="hljs-string">"r"</span>),
                    yaxis = list(title = <span class="hljs-string">"x_0"</span>),
                    zaxis = list(title = <span class="hljs-string">"orbit values"</span>), 
                    camera = list(eye = list(x = -<span class="hljs-number">1.25</span>, y = <span class="hljs-number">1.25</span>, z = <span class="hljs-number">1.25</span>))))</code></pre>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure21.png" alt="" width="1216" height="942" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure21-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure21-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure21-md.png 768w"></figure>
<p>Note that if we change the iteration step, we get a different surface. Here is the surface we would have got if we had chosen to take a slice of the data at the 10th iteration step:</p>
<pre class="r"><code class="hljs">iterate_value &lt;- <span class="hljs-number">10</span>

data %&gt;% unnest(everything()) %&gt;% 
  filter(iter_num == iterate_value) %&gt;% 
  filter(x_0 &lt; <span class="hljs-number">0.5</span>) %&gt;% 
  plot_ly(data=., 
          x = ~r, 
          y = ~x_0, 
          z = ~final_state, 
          colors = <span class="hljs-string">"turquoise"</span>,
          marker = list(size = <span class="hljs-number">1</span>,
                        reversescale=<span class="hljs-literal">F</span>)) %&gt;% 
  add_markers() %&gt;%
  layout(title = paste0(<span class="hljs-string">"Model surface: all models approachable \nby splines for initial conditions \nbetween 0 and 1, at iteration step "</span>, iterate_value),
         scene=list(xaxis = list(title = <span class="hljs-string">"r"</span>),
                    yaxis = list(title = <span class="hljs-string">"x_0"</span>),
                    zaxis = list(title = <span class="hljs-string">"orbit values"</span>), 
                    camera = list(eye = list(x = -<span class="hljs-number">1.25</span>, y = <span class="hljs-number">1.25</span>, z = <span class="hljs-number">1.25</span>))))</code></pre>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure22.png" alt="" width="900" height="950" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure22-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure22-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure22-md.png 768w"></figure>
<div id="model" class="section level2">
<p>From the plot, you can see that the point cloud becomes harder to describe with a surface past 3 units along the <span class="math inline"><span id="MathJax-Element-17-Frame" class="MathJax" style="box-sizing: border-box; display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 14px; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; position: relative;" tabindex="0" role="presentation" data-mathml="&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;/math&gt;"><span id="MathJax-Span-140" class="math"><span id="MathJax-Span-141" class="mrow"><span id="MathJax-Span-142" class="mi">r</span></span></span><span class="MJX_Assistive_MathML" role="presentation">r</span></span></span> axis. This indicates it would be harder to approach it with a spline model.</p>
</div>
<div id="multivariate-model" class="section level2">
<h2>Multivariate model</h2>
<p>Let’s try to model x_0 from all orbit values and values of r for an iterate value at once:</p>
<pre class="r"><code class="hljs">set.seed(<span class="hljs-number">1</span>)

data_unnested &lt;- data %&gt;% unnest(everything()) %&gt;% 
  filter(x_0 &lt;= <span class="hljs-number">0.5</span>) %&gt;% filter(iter_num == model_iterate_value)

index &lt;- createDataPartition(data_unnested$x_0, p = <span class="hljs-number">.8</span>, list=<span class="hljs-literal">FALSE</span>)
training_data &lt;- data_unnested[ index,]
test_data  &lt;- data_unnested[-index,]</code></pre>
<pre class="r"><code class="hljs">bifurcation_gam_multivariate &lt;- gam(x_0 ~ s(final_state) + s(r), data = training_data)
summary(bifurcation_gam_multivariate)</code></pre>
<pre><code class="hljs">## 
## Family: gaussian 
## Link function: identity 
## 
## Formula:
## x_0 ~ s(final_state) + s(r)
## 
## Parametric coefficients:
##              Estimate Std. Error t value Pr(&gt;|t|)    
## (Intercept) 0.2485989  0.0005742     433   &lt;2e-16 ***
## ---
## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
## 
## Approximate significance of smooth terms:
##                  edf Ref.df    F p-value    
## s(final_state) 8.982  9.000 5327  &lt;2e-16 ***
## s(r)           8.756  8.983 3017  &lt;2e-16 ***
## ---
## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
## 
## R-sq.(adj) =   0.75   Deviance explained =   75%
## GCV = 0.0052814  Scale est. = 0.0052752  n = 16000</code></pre>
<pre class="r"><code class="hljs">predictions_gam &lt;- predict(bifurcation_gam_multivariate, test_data)
RMSE(predictions_gam, test_data$x_0)</code></pre>
<pre><code class="hljs">## [1] 0.07323365</code></pre>
<pre class="r"><code class="hljs">plot(bifurcation_gam_multivariate)</code></pre>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure23.png" alt="" width="1344" height="960" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure23-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure23-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure23-md.png 768w"></figure><figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/figure24.png" alt="" width="1344" height="960" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure24-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure24-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/11/responsive/figure24-md.png 768w"></figure>
<p>Also excellent!</p>
<p>I am curious to try to apply models to later iteration steps, but for now I feel this project has gone on enough, and you probably have other stuff to get to, so I’ll come back to it later.</p>
<p>These models are all such good fits that it makes little sense to compare them. However, hopefully this exploration has served more than to show that a spline regression model can be used to predict initial conditions used to generate sets of points from bifurcation diagrams of the logistic map, as long as we have access to early iteration steps. Beyond that, my hope is that this exploration will provide readers with more insight into the shape and properties of the bifurcation diagram of the logistic equation, a mathematical object which is now ubiquitous throughout mathematical literature.</p>
</div>
</div>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Graphical iteration in R</title>
        <author>
            <name>Phileas Dazeley-Gaist</name>
        </author>
        <link href="https://phileasdg.github.io/phileas-dazeley-gaist/graphical-iteration-in-r/"/>
        <id>https://phileasdg.github.io/phileas-dazeley-gaist/graphical-iteration-in-r/</id>
        <media:content url="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/7/staircase-diagram.png" medium="image" />
            <category term="Undergraduate work"/>
            <category term="R"/>
            <category term="Programming"/>

        <updated>2022-08-12T08:15:11-04:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/7/staircase-diagram.png" alt="" />
                    What is graphical iteration? Graphical iteration is one graphical way to visualise the&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/7/staircase-diagram.png" class="type:primaryImage" alt="" /></p>
                <h2><span data-offset-key="3bl4a-0-0">What</span><span data-offset-key="3bl4a-1-0"> is</span><span data-offset-key="3bl4a-2-0"> graphical</span><span data-offset-key="3bl4a-3-0"> iteration</span><span data-offset-key="3bl4a-4-0">?</span></h2>
<p><span data-offset-key="3bl4a-23-0">Graph</span><span data-offset-key="3bl4a-24-0">ical</span><span data-offset-key="3bl4a-25-0"> iteration</span><span data-offset-key="3bl4a-26-0"> is</span><span data-offset-key="3bl4a-27-0"> one</span><span data-offset-key="3bl4a-28-0"> graphical</span><span data-offset-key="3bl4a-29-0"> way</span><span data-offset-key="3bl4a-30-0"> to</span><span data-offset-key="3bl4a-31-0"> visual</span><span data-offset-key="3bl4a-32-0">ise</span><span data-offset-key="3bl4a-33-0"> the</span><span data-offset-key="3bl4a-34-0"> orbits</span><span data-offset-key="3bl4a-35-0"> of</span><span data-offset-key="3bl4a-36-0"> a</span><span data-offset-key="3bl4a-37-0"> function</span><span data-offset-key="3bl4a-38-0"> for</span><span data-offset-key="3bl4a-39-0"> different</span><span data-offset-key="3bl4a-40-0"> initial</span><span data-offset-key="3bl4a-41-0"> conditions</span><span data-offset-key="3bl4a-42-0">.</span><span data-offset-key="3bl4a-43-0"> The</span><span data-offset-key="3bl4a-44-0"> main</span><span data-offset-key="3bl4a-45-0"> advantages</span><span data-offset-key="3bl4a-46-0"> of</span><span data-offset-key="3bl4a-47-0"> graphical</span><span data-offset-key="3bl4a-48-0"> iteration</span><span data-offset-key="3bl4a-49-0"> over</span><span data-offset-key="3bl4a-50-0"> other</span><span data-offset-key="3bl4a-51-0"> ways</span><span data-offset-key="3bl4a-52-0"> to</span><span data-offset-key="3bl4a-53-0"> visual</span><span data-offset-key="3bl4a-54-0">ise</span><span data-offset-key="3bl4a-55-0"> function</span><span data-offset-key="3bl4a-56-0"> orbits</span><span data-offset-key="3bl4a-57-0"> are</span><span data-offset-key="3bl4a-58-0"> that</span><span data-offset-key="3bl4a-59-0"> graphical</span><span data-offset-key="3bl4a-60-0"> iteration</span><span data-offset-key="3bl4a-61-0"> provides</span><span data-offset-key="3bl4a-62-0"> a</span><span data-offset-key="3bl4a-63-0"> visual</span><span data-offset-key="3bl4a-64-0">isation</span><span data-offset-key="3bl4a-65-0"> of</span><span data-offset-key="3bl4a-66-0"> the</span><span data-offset-key="3bl4a-67-0"> orbits</span><span data-offset-key="3bl4a-68-0"> as</span><span data-offset-key="3bl4a-69-0"> a</span><span data-offset-key="3bl4a-70-0"> trajectory</span><span data-offset-key="3bl4a-71-0"> on</span><span data-offset-key="3bl4a-72-0"> the</span><span data-offset-key="3bl4a-73-0"> plot</span><span data-offset-key="3bl4a-74-0"> of</span><span data-offset-key="3bl4a-75-0"> the</span><span data-offset-key="3bl4a-76-0"> function</span><span data-offset-key="3bl4a-77-0"> being</span><span data-offset-key="3bl4a-78-0"> iter</span><span data-offset-key="3bl4a-79-0">ated</span><span data-offset-key="3bl4a-80-0">.</span><span data-offset-key="3bl4a-81-0"> This</span><span data-offset-key="3bl4a-82-0"> can</span><span data-offset-key="3bl4a-83-0"> give</span><span data-offset-key="3bl4a-84-0"> insights</span><span data-offset-key="3bl4a-85-0"> into</span><span data-offset-key="3bl4a-86-0"> the</span><span data-offset-key="3bl4a-87-0"> behaviour</span><span data-offset-key="3bl4a-88-0"> of</span><span data-offset-key="3bl4a-89-0"> the</span><span data-offset-key="3bl4a-90-0"> orbits</span><span data-offset-key="3bl4a-91-0"> that</span><span data-offset-key="3bl4a-92-0"> might</span><span data-offset-key="3bl4a-93-0"> not</span><span data-offset-key="3bl4a-94-0"> be</span><span data-offset-key="3bl4a-95-0"> apparent</span><span data-offset-key="3bl4a-96-0"> from</span><span data-offset-key="3bl4a-97-0"> other</span><span data-offset-key="3bl4a-98-0"> ways</span><span data-offset-key="3bl4a-99-0"> of</span><span data-offset-key="3bl4a-100-0"> visual</span><span data-offset-key="3bl4a-101-0">ising</span><span data-offset-key="3bl4a-102-0"> the</span><span data-offset-key="3bl4a-103-0"> orbits</span><span data-offset-key="3bl4a-104-0">.</span><span data-offset-key="3bl4a-105-0"> It</span><span data-offset-key="3bl4a-106-0"> is</span><span data-offset-key="3bl4a-107-0"> another</span><span data-offset-key="3bl4a-108-0"> way</span><span data-offset-key="3bl4a-109-0"> to</span><span data-offset-key="3bl4a-110-0"> conceptual</span><span data-offset-key="3bl4a-111-0">ise</span><span data-offset-key="3bl4a-112-0"> the</span> <span data-offset-key="3bl4a-114-0"> behaviour</span><span data-offset-key="3bl4a-115-0"> of</span><span data-offset-key="3bl4a-116-0"> orbits</span><span data-offset-key="3bl4a-117-0">.</span></p>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/7/graphical_iteration.png" alt="graphical iteration illustration " width="720" height="536" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/7/responsive/graphical_iteration-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/7/responsive/graphical_iteration-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/7/responsive/graphical_iteration-md.png 768w"><figcaption>Graphical iteration illustration from https://www.mathscard.co.uk/online/numerical-methods/</figcaption></figure>
<h2><span data-offset-key="3bl4a-120-0">How</span><span data-offset-key="3bl4a-121-0"> does</span><span data-offset-key="3bl4a-122-0"> graphical</span><span data-offset-key="3bl4a-123-0"> iteration</span><span data-offset-key="3bl4a-124-0"> work</span><span data-offset-key="3bl4a-125-0">?</span></h2>
<p><strong>A step by step guide:</strong></p>
<ol>
<li><span data-offset-key="3bl4a-136-0">Choose</span><span data-offset-key="3bl4a-137-0"> a</span><span data-offset-key="3bl4a-138-0"> function</span><span data-offset-key="3bl4a-139-0"> to</span><span data-offset-key="3bl4a-140-0"> iter</span><span data-offset-key="3bl4a-141-0">ate</span><span data-offset-key="3bl4a-142-0">,</span><span data-offset-key="3bl4a-143-0"> for</span><span data-offset-key="3bl4a-144-0"> example</span><span data-offset-key="3bl4a-145-0">,</span><span data-offset-key="3bl4a-146-0"> the</span><span data-offset-key="3bl4a-147-0"> function</span><span data-offset-key="3bl4a-148-0"> f</span><span data-offset-key="3bl4a-149-0">(</span><span data-offset-key="3bl4a-150-0">x</span><span data-offset-key="3bl4a-151-0">)</span><span data-offset-key="3bl4a-152-0"> =</span><span data-offset-key="3bl4a-153-0"> x</span><span data-offset-key="3bl4a-154-0">^</span><span data-offset-key="3bl4a-155-0">2</span><span data-offset-key="3bl4a-156-0">.</span></li>
<li><span data-offset-key="3bl4a-160-0">Choose</span><span data-offset-key="3bl4a-161-0"> an</span><span data-offset-key="3bl4a-162-0"> initial</span><span data-offset-key="3bl4a-163-0"> x</span><span data-offset-key="3bl4a-164-0">-</span><span data-offset-key="3bl4a-165-0">value</span><span data-offset-key="3bl4a-166-0">,</span><span data-offset-key="3bl4a-167-0"> for</span><span data-offset-key="3bl4a-168-0"> example</span><span data-offset-key="3bl4a-169-0">,</span><span data-offset-key="3bl4a-170-0"> x</span><span data-offset-key="3bl4a-171-0">_</span><span data-offset-key="3bl4a-172-0">0</span><span data-offset-key="3bl4a-173-0"> =</span><span data-offset-key="3bl4a-174-0"> 0</span><span data-offset-key="3bl4a-175-0">.</span><span data-offset-key="3bl4a-176-0">3</span><span data-offset-key="3bl4a-177-0">.</span></li>
<li><span data-offset-key="3bl4a-181-0">Trace</span><span data-offset-key="3bl4a-182-0"> a</span><span data-offset-key="3bl4a-183-0"> line</span><span data-offset-key="3bl4a-184-0"> perpendicular</span><span data-offset-key="3bl4a-185-0"> to</span><span data-offset-key="3bl4a-186-0"> the</span><span data-offset-key="3bl4a-187-0"> x</span><span data-offset-key="3bl4a-188-0">_</span><span data-offset-key="3bl4a-189-0">axis</span><span data-offset-key="3bl4a-190-0"> from</span><span data-offset-key="3bl4a-191-0"> x</span><span data-offset-key="3bl4a-192-0">_</span><span data-offset-key="3bl4a-193-0">n</span><span data-offset-key="3bl4a-194-0"> =</span><span data-offset-key="3bl4a-195-0"> x</span><span data-offset-key="3bl4a-196-0">_</span><span data-offset-key="3bl4a-197-0">0</span><span data-offset-key="3bl4a-198-0"> =</span><span data-offset-key="3bl4a-199-0"> 0</span><span data-offset-key="3bl4a-200-0">.</span><span data-offset-key="3bl4a-201-0">3</span><span data-offset-key="3bl4a-202-0"> in</span><span data-offset-key="3bl4a-203-0"> x</span><span data-offset-key="3bl4a-204-0"> and</span><span data-offset-key="3bl4a-205-0"> 0</span><span data-offset-key="3bl4a-206-0"> in</span><span data-offset-key="3bl4a-207-0"> y</span><span data-offset-key="3bl4a-208-0"> to</span><span data-offset-key="3bl4a-209-0"> y</span><span data-offset-key="3bl4a-210-0"> =</span><span data-offset-key="3bl4a-211-0"> f</span><span data-offset-key="3bl4a-212-0">(</span><span data-offset-key="3bl4a-213-0">x</span><span data-offset-key="3bl4a-214-0">_</span><span data-offset-key="3bl4a-215-0">n</span><span data-offset-key="3bl4a-216-0">)</span><span data-offset-key="3bl4a-217-0"> =</span><span data-offset-key="3bl4a-218-0"> x</span><span data-offset-key="3bl4a-219-0">_</span><span data-offset-key="3bl4a-220-0">n</span><span data-offset-key="3bl4a-221-0">^</span><span data-offset-key="3bl4a-222-0">2</span></li>
<li><span data-offset-key="3bl4a-226-0">Trace</span><span data-offset-key="3bl4a-227-0"> a</span><span data-offset-key="3bl4a-228-0"> line</span><span data-offset-key="3bl4a-229-0"> parallel</span><span data-offset-key="3bl4a-230-0"> to</span><span data-offset-key="3bl4a-231-0"> the</span><span data-offset-key="3bl4a-232-0"> x</span><span data-offset-key="3bl4a-233-0">_</span><span data-offset-key="3bl4a-234-0">axis</span><span data-offset-key="3bl4a-235-0"> from</span><span data-offset-key="3bl4a-236-0"> 0</span><span data-offset-key="3bl4a-237-0">.</span><span data-offset-key="3bl4a-238-0">3</span><span data-offset-key="3bl4a-239-0"> in</span><span data-offset-key="3bl4a-240-0"> x</span><span data-offset-key="3bl4a-241-0"> and</span><span data-offset-key="3bl4a-242-0"> y</span><span data-offset-key="3bl4a-243-0"> =</span><span data-offset-key="3bl4a-244-0"> f</span><span data-offset-key="3bl4a-245-0">(</span><span data-offset-key="3bl4a-246-0">x</span><span data-offset-key="3bl4a-247-0">_</span><span data-offset-key="3bl4a-248-0">n</span><span data-offset-key="3bl4a-249-0">)</span><span data-offset-key="3bl4a-250-0"> =</span><span data-offset-key="3bl4a-251-0"> x</span><span data-offset-key="3bl4a-252-0">^</span><span data-offset-key="3bl4a-253-0">2</span><span data-offset-key="3bl4a-254-0"> to</span><span data-offset-key="3bl4a-255-0"> x</span><span data-offset-key="3bl4a-256-0"> =</span><span data-offset-key="3bl4a-257-0"> f</span><span data-offset-key="3bl4a-258-0">(</span><span data-offset-key="3bl4a-259-0">x</span><span data-offset-key="3bl4a-260-0">_(</span><span data-offset-key="3bl4a-261-0">n</span><span data-offset-key="3bl4a-262-0">+</span><span data-offset-key="3bl4a-263-0">1</span><span data-offset-key="3bl4a-264-0">))</span><span data-offset-key="3bl4a-265-0"> =</span><span data-offset-key="3bl4a-266-0"> x</span><span data-offset-key="3bl4a-267-0">_(</span><span data-offset-key="3bl4a-268-0">n</span><span data-offset-key="3bl4a-269-0">+</span><span data-offset-key="3bl4a-270-0">1</span><span data-offset-key="3bl4a-271-0">)</span></li>
<li><span data-offset-key="3bl4a-275-0">Repeat</span><span data-offset-key="3bl4a-276-0"> steps</span><span data-offset-key="3bl4a-277-0"> 3</span><span data-offset-key="3bl4a-278-0"> and</span><span data-offset-key="3bl4a-279-0"> 4</span><span data-offset-key="3bl4a-280-0"> for</span><span data-offset-key="3bl4a-281-0"> following</span><span data-offset-key="3bl4a-282-0"> iter</span><span data-offset-key="3bl4a-283-0">ate</span><span data-offset-key="3bl4a-284-0"> values</span><span data-offset-key="3bl4a-285-0"> up</span><span data-offset-key="3bl4a-286-0"> to</span><span data-offset-key="3bl4a-287-0"> the</span><span data-offset-key="3bl4a-288-0"> desired</span><span data-offset-key="3bl4a-289-0"> x</span><span data-offset-key="3bl4a-290-0">_</span><span data-offset-key="3bl4a-291-0">n</span><span data-offset-key="3bl4a-292-0">.</span></li>
</ol>
<h2>Graphical iteration in R with tidyverse</h2>
<p>This past winter, I wrote a short program in R to produce graphical iteration plots for custom mathematical functions as a tool and fun side-project for a college course on chaos and fractals which I took at College of the Atlantic, in Bar Harbor, ME.</p>
<p>Although I think of myself usually more as a python programmer, I find R has some great advantages when it comes to plotting thanks to the tidyverse library collection, which includes the excellent ggplot.</p>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/7/graphical-iteration.png" alt="Graphical Iteration plot for the orbits of the function f(x) = -2 * sin(x) + x, given initial conditions 3.6, 4.43, and 7" width="1400" height="865" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/7/responsive/graphical-iteration-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/7/responsive/graphical-iteration-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/7/responsive/graphical-iteration-md.png 768w"><figcaption>Graphical iteration plot of the orbits of the function f(x) = <span class="pl-k">-</span><span class="pl-c1">2</span> <span class="pl-k">*</span> sin(<span class="pl-smi">x</span>) <span class="pl-k">+</span> <span class="pl-smi">x, for the initial conditions 3.6, 4.43, and 7. Made using ggplot.</span></figcaption></figure>
<h2>The program</h2>
<p>The program is fairly simple. It is composed of several blocks. First, a setup block, in which the user specifies the program settings such as the function to iterate, initial conditions, number of iterations, and the plot window. Then, the block where most of the code lifes, the main body of the program, which is composed of a function to collect plotting data for the user-specified function, a function to collect and return graphical iteration plotting data, and a last function to collect and return time series plotting data according to the program settings. In the final block of this program, we run the functions from the last block with the user-specified setup settings, and plot the graphical iteration and time series orbit plots using the tibbles the functions return.</p>
<h3 dir="auto">Setup</h3>
<div class="highlight highlight-source-r position-relative overflow-auto">
<pre><span class="pl-c"># set your initial condition and desired number of iterations:</span>
<span class="pl-smi">x_0s</span> <span class="pl-k">&lt;-</span> c(<span class="pl-c1">3.43</span>, <span class="pl-c1">4.43</span>, <span class="pl-c1">7</span>)
<span class="pl-smi">N</span> <span class="pl-k">&lt;-</span> <span class="pl-c1">100</span>

<span class="pl-c"># set the iteration plot x axis range (lower and upper bounds):</span>
<span class="pl-smi">x_min</span> <span class="pl-k">&lt;-</span> <span class="pl-c1">0</span>; <span class="pl-smi">x_max</span> <span class="pl-k">&lt;-</span> <span class="pl-c1">8</span>
<span class="pl-smi">y_min</span> <span class="pl-k">&lt;-</span> <span class="pl-k">-</span><span class="pl-c1">2</span>; <span class="pl-smi">y_max</span> <span class="pl-k">&lt;-</span> <span class="pl-c1">8</span>

<span class="pl-smi">use_custom_range_x</span> <span class="pl-k">&lt;-</span> <span class="pl-c1">FALSE</span>
<span class="pl-smi">use_custom_range_y</span> <span class="pl-k">&lt;-</span> <span class="pl-c1">FALSE</span>

<span class="pl-c"># declare your function here:</span>
<span class="pl-en">func</span> <span class="pl-k">&lt;-</span> <span class="pl-k">function</span>(<span class="pl-smi">x</span>){
  <span class="pl-k">return</span>(<span class="pl-k">-</span><span class="pl-c1">2</span> <span class="pl-k">*</span> sin(<span class="pl-smi">x</span>) <span class="pl-k">+</span> <span class="pl-smi">x</span>) <span class="pl-c"># function goes here</span>
}</pre>
</div>
<h3 dir="auto">The nitty-gritty</h3>
<div class="highlight highlight-source-r position-relative overflow-auto">
<pre><span class="pl-en">get_function_data</span> <span class="pl-k">&lt;-</span> <span class="pl-k">function</span>(<span class="pl-v">range</span> <span class="pl-k">=</span> c(<span class="pl-k">-</span><span class="pl-c1">1</span>, <span class="pl-c1">1</span>), <span class="pl-v">steps</span> <span class="pl-k">=</span> <span class="pl-c1">100</span>){
  
  <span class="pl-smi">steps_multiplier</span> <span class="pl-k">&lt;-</span> (<span class="pl-smi">range</span>[<span class="pl-c1">2</span>]<span class="pl-k">-</span><span class="pl-smi">range</span>[<span class="pl-c1">1</span>])<span class="pl-k">/</span><span class="pl-c1">10</span> 
  <span class="pl-k">if</span>(<span class="pl-smi">steps_multiplier</span> <span class="pl-k">&lt;</span> <span class="pl-c1">1</span>){<span class="pl-smi">steps_multiplier</span> <span class="pl-k">&lt;-</span> <span class="pl-c1">1</span>}
  <span class="pl-c"># adds steps to get data for depending on the number of 10s </span>
  <span class="pl-c"># in the specified plot x range</span>
  
  <span class="pl-smi">x</span> <span class="pl-k">&lt;-</span> seq(<span class="pl-v">from</span> <span class="pl-k">=</span> <span class="pl-smi">range</span>[<span class="pl-c1">1</span>], <span class="pl-v">to</span> <span class="pl-k">=</span> <span class="pl-smi">range</span>[<span class="pl-c1">2</span>], <span class="pl-v">length.out</span> <span class="pl-k">=</span> <span class="pl-smi">steps</span> <span class="pl-k">*</span> <span class="pl-smi">steps_multiplier</span>)
  
  <span class="pl-smi">y</span> <span class="pl-k">&lt;-</span> <span class="pl-k">array</span>(<span class="pl-v">dim</span> <span class="pl-k">=</span> <span class="pl-smi">steps</span> <span class="pl-k">*</span> <span class="pl-smi">steps_multiplier</span>) 
  <span class="pl-k">for</span>(<span class="pl-smi">i</span> <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>length(<span class="pl-smi">x</span>)){
    <span class="pl-smi">y</span>[<span class="pl-smi">i</span>] <span class="pl-k">&lt;-</span> func(<span class="pl-smi">x</span>[<span class="pl-smi">i</span>])
    } 
  
  <span class="pl-k">return</span>(<span class="pl-k">data.frame</span>(<span class="pl-v">x</span> <span class="pl-k">=</span> <span class="pl-smi">x</span>, <span class="pl-v">y</span> <span class="pl-k">=</span> <span class="pl-smi">y</span>))
}

<span class="pl-en">graphical_iterator</span> <span class="pl-k">&lt;-</span> <span class="pl-k">function</span>(<span class="pl-smi">x_0s</span>, <span class="pl-v">N</span> <span class="pl-k">=</span> <span class="pl-c1">100</span>){ 
  
  <span class="pl-smi">segments</span> <span class="pl-k">&lt;-</span> <span class="pl-k">data.frame</span>()
  <span class="pl-k">for</span>(<span class="pl-smi">i</span> <span class="pl-k">in</span> <span class="pl-smi">x_0s</span>){
    
    <span class="pl-smi">start</span> <span class="pl-k">&lt;-</span> <span class="pl-smi">i</span> 
    <span class="pl-smi">vert</span> <span class="pl-k">&lt;-</span> <span class="pl-c1">FALSE</span> 
    
    <span class="pl-smi">x_0</span> <span class="pl-k">&lt;-</span> rep(<span class="pl-smi">i</span>,<span class="pl-v">times</span><span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">+</span>(<span class="pl-smi">N</span><span class="pl-k">*</span><span class="pl-c1">2</span>))
    <span class="pl-smi">xstarts</span> <span class="pl-k">&lt;-</span> c(<span class="pl-smi">start</span>)
    <span class="pl-smi">ystarts</span> <span class="pl-k">&lt;-</span> c(<span class="pl-smi">y_min</span>)
    <span class="pl-smi">xends</span> <span class="pl-k">&lt;-</span> c(<span class="pl-smi">start</span>)
    <span class="pl-smi">yends</span> <span class="pl-k">&lt;-</span> c(func(<span class="pl-smi">start</span>))
    
    <span class="pl-c"># iteratively get the coordinates of the next segment points</span>
    <span class="pl-k">for</span>(<span class="pl-smi">i</span> <span class="pl-k">in</span> <span class="pl-c1">1</span><span class="pl-k">:</span>(<span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-smi">N</span>)) 
      <span class="pl-c"># range = 2 * N because every step will be described by two segments</span>
    {
      <span class="pl-c"># if the last segment was vertical, the next must be horizontal</span>
      <span class="pl-k">if</span>(<span class="pl-smi">vert</span>){
        <span class="pl-smi">xstarts</span> <span class="pl-k">&lt;-</span> c(<span class="pl-smi">xstarts</span>, <span class="pl-smi">start</span>)
        <span class="pl-smi">ystarts</span> <span class="pl-k">&lt;-</span> c(<span class="pl-smi">ystarts</span>, <span class="pl-smi">start</span>)
        <span class="pl-smi">xends</span> <span class="pl-k">&lt;-</span> c(<span class="pl-smi">xends</span>, <span class="pl-smi">start</span>)
        <span class="pl-smi">yends</span> <span class="pl-k">&lt;-</span> c(<span class="pl-smi">yends</span>, func(<span class="pl-smi">start</span>)) 
        <span class="pl-smi">vert</span> <span class="pl-k">&lt;-</span> <span class="pl-c1">FALSE</span>
      }
      <span class="pl-k">else</span>{
        <span class="pl-smi">xstarts</span> <span class="pl-k">&lt;-</span> c(<span class="pl-smi">xstarts</span>, <span class="pl-smi">start</span>)
        <span class="pl-smi">ystarts</span> <span class="pl-k">&lt;-</span> c(<span class="pl-smi">ystarts</span>, func(<span class="pl-smi">start</span>)) 
        <span class="pl-smi">xends</span> <span class="pl-k">&lt;-</span> c(<span class="pl-smi">xends</span>, func(<span class="pl-smi">start</span>)) 
        <span class="pl-smi">yends</span> <span class="pl-k">&lt;-</span> c(<span class="pl-smi">yends</span>, func(<span class="pl-smi">start</span>)) 
        <span class="pl-smi">vert</span> <span class="pl-k">&lt;-</span> <span class="pl-c1">TRUE</span>
        <span class="pl-smi">start</span> <span class="pl-k">&lt;-</span> func(<span class="pl-smi">start</span>) <span class="pl-c"># update start value</span>
      }
    }
    <span class="pl-smi">segments</span> <span class="pl-k">&lt;-</span> rbind(<span class="pl-smi">segments</span>, <span class="pl-k">data.frame</span>(<span class="pl-v">x_0s</span> <span class="pl-k">=</span> <span class="pl-smi">x_0</span>, <span class="pl-smi">xstarts</span>, <span class="pl-smi">ystarts</span>, <span class="pl-smi">xends</span>, <span class="pl-smi">yends</span>))
  }
  <span class="pl-k">return</span>(<span class="pl-smi">segments</span>)
}

<span class="pl-smi">cobweb_trajects</span> <span class="pl-k">&lt;-</span> graphical_iterator(<span class="pl-v">x_0s</span> <span class="pl-k">=</span> <span class="pl-smi">x_0s</span>, <span class="pl-v">N</span> <span class="pl-k">=</span> <span class="pl-smi">N</span>)

<span class="pl-k">if</span>(<span class="pl-smi">use_custom_range_x</span> <span class="pl-k">==</span> <span class="pl-c1">FALSE</span>){
  <span class="pl-smi">x_min</span> <span class="pl-k">&lt;-</span> min(<span class="pl-smi">cobweb_trajects</span><span class="pl-k">$</span><span class="pl-smi">xstarts</span>); <span class="pl-smi">x_max</span> <span class="pl-k">&lt;-</span> max(<span class="pl-smi">cobweb_trajects</span><span class="pl-k">$</span><span class="pl-smi">xends</span>)
}
<span class="pl-k">if</span>(<span class="pl-smi">use_custom_range_y</span> <span class="pl-k">==</span> <span class="pl-c1">FALSE</span>){
  <span class="pl-smi">y_min</span> <span class="pl-k">&lt;-</span> min(<span class="pl-smi">cobweb_trajects</span><span class="pl-k">$</span><span class="pl-smi">xstarts</span>); <span class="pl-smi">y_max</span> <span class="pl-k">&lt;-</span> max(<span class="pl-smi">cobweb_trajects</span><span class="pl-k">$</span><span class="pl-smi">xends</span>)
}

<span class="pl-smi">plot_data</span> <span class="pl-k">&lt;-</span> get_function_data(<span class="pl-v">range</span> <span class="pl-k">=</span> c(<span class="pl-smi">x_min</span>,<span class="pl-smi">x_max</span>)) <span class="pl-c"># gets the plotting data</span>

<span class="pl-en">get_function_iteration_trajectories</span> <span class="pl-k">&lt;-</span> <span class="pl-k">function</span>(<span class="pl-smi">x_0s</span>, <span class="pl-v">N</span> <span class="pl-k">=</span> <span class="pl-c1">100</span>){
  
  <span class="pl-smi">trajectories</span> <span class="pl-k">&lt;-</span> <span class="pl-k">data.frame</span>()
  
  <span class="pl-k">for</span>(<span class="pl-smi">i</span> <span class="pl-k">in</span> <span class="pl-smi">x_0s</span>){
    <span class="pl-smi">x_t</span> <span class="pl-k">&lt;-</span> <span class="pl-smi">i</span>
    
    <span class="pl-smi">x_0</span> <span class="pl-k">&lt;-</span> rep(<span class="pl-smi">i</span>,<span class="pl-v">times</span><span class="pl-k">=</span><span class="pl-smi">N</span><span class="pl-k">+</span><span class="pl-c1">1</span>)
    <span class="pl-smi">n</span> <span class="pl-k">&lt;-</span> <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-smi">N</span>
    
    <span class="pl-smi">trajectory</span> <span class="pl-k">&lt;-</span> c(<span class="pl-smi">x_t</span>)
    
    <span class="pl-k">for</span>(<span class="pl-smi">t</span> <span class="pl-k">in</span> <span class="pl-c1">0</span><span class="pl-k">:</span>(<span class="pl-smi">N</span><span class="pl-k">-</span><span class="pl-c1">1</span>)){
      <span class="pl-smi">x_t</span> <span class="pl-k">&lt;-</span> func(<span class="pl-smi">x_t</span>)
      <span class="pl-smi">trajectory</span> <span class="pl-k">&lt;-</span> c(<span class="pl-smi">trajectory</span>, <span class="pl-smi">x_t</span>) <span class="pl-c"># add x_t_1's value to the trajectory vector</span>
    }
    <span class="pl-smi">trajectories</span> <span class="pl-k">&lt;-</span> rbind(<span class="pl-smi">trajectories</span>, <span class="pl-k">data.frame</span>(<span class="pl-v">x_0s</span> <span class="pl-k">=</span> <span class="pl-smi">x_0</span>, <span class="pl-v">ns</span> <span class="pl-k">=</span> <span class="pl-smi">n</span>, <span class="pl-v">trajectories</span> <span class="pl-k">=</span> <span class="pl-smi">trajectory</span>))
  }
  <span class="pl-k">return</span>(<span class="pl-smi">trajectories</span>)
}

<span class="pl-smi">trajectories</span> <span class="pl-k">&lt;-</span> get_function_iteration_trajectories(<span class="pl-v">x_0s</span> <span class="pl-k">=</span> <span class="pl-smi">x_0s</span>, <span class="pl-v">N</span> <span class="pl-k">=</span> <span class="pl-smi">N</span>)</pre>
<h3 class="zeroclipboard-container position-absolute right-0 top-0"><span style="color: var(--headings-color); font-family: var(--font-base); font-size: 1.60181em; font-weight: var(--font-weight-bold); letter-spacing: var(--letter-spacing);">Plots</span></h3>
</div>
<p dir="auto"><strong>Graphical iteration plot:</strong></p>
<div class="highlight highlight-source-r position-relative overflow-auto">
<pre><span class="pl-smi">plot_data</span> %<span class="pl-k">&gt;</span>% 
  ggplot(aes(<span class="pl-smi">x</span>, <span class="pl-smi">y</span>)) <span class="pl-k">+</span>
  geom_line(<span class="pl-v">colour</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>black<span class="pl-pds">"</span></span>) <span class="pl-k">+</span>
  geom_abline(<span class="pl-v">linetype</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">"</span>dashed<span class="pl-pds">"</span></span>) <span class="pl-k">+</span> 
  geom_segment(<span class="pl-v">data</span> <span class="pl-k">=</span> <span class="pl-smi">cobweb_trajects</span>, aes(<span class="pl-v">x</span> <span class="pl-k">=</span> <span class="pl-smi">xstarts</span>, <span class="pl-v">y</span> <span class="pl-k">=</span> <span class="pl-smi">ystarts</span>, <span class="pl-v">xend</span> <span class="pl-k">=</span> <span class="pl-smi">xends</span>, 
                                          <span class="pl-v">yend</span> <span class="pl-k">=</span> <span class="pl-smi">yends</span>, <span class="pl-v">colour</span><span class="pl-k">=</span>as.factor(<span class="pl-smi">x_0s</span>))) <span class="pl-k">+</span>
  coord_cartesian(<span class="pl-v">xlim</span> <span class="pl-k">=</span> c(<span class="pl-smi">x_min</span>, <span class="pl-smi">x_max</span>), <span class="pl-v">ylim</span> <span class="pl-k">=</span> c(<span class="pl-smi">y_min</span>, <span class="pl-smi">y_max</span>)) </pre>
</div>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/7/figure1.png" alt="" width="672" height="480" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/7/responsive/figure1-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/7/responsive/figure1-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/7/responsive/figure1-md.png 768w"></figure>
<p><strong>Time-series plot: </strong></p>
<pre><span class="pl-c"># trajectory plot</span>
<span class="pl-smi">trajectories</span> %<span class="pl-k">&gt;</span>% 
  ggplot(aes(<span class="pl-smi">ns</span>, <span class="pl-smi">trajectories</span>, <span class="pl-v">colour</span> <span class="pl-k">=</span> as.factor(<span class="pl-smi">x_0s</span>))) <span class="pl-k">+</span>
  geom_line() <span class="pl-k">+</span> labs(<span class="pl-v">x</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">"</span>n<span class="pl-pds">"</span></span>)</pre>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/7/figure2.png" alt="" width="672" height="480" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/7/responsive/figure2-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/7/responsive/figure2-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/7/responsive/figure2-md.png 768w"></figure>
<h2>Closing remarks </h2>
<p>I hope that this tool might be useful in education settings for demonstration purposes, or for analysis, as the program also produces data frames of the plotting data which contain all the orbit information. I am hopeful that this tool might be useful to undergraduate students. I have seen graphical iteration used in economics courses at the university level, so perhaps this tool could help economists in training, for instance, to model poverty traps.  </p>
<p>If you are interested in trying this code out for yourself, by far the easiest way is probably to download the original .rmd file from my GitHub, at this link: <a href="https://github.com/phileasdg/Graphical-Iteration-in-R">Graphical iteration in R on GitHub</a> Please feel free to modify it and use it in your projects. The program is licensed under <a href="http://creativecommons.org/licenses/by-nc-sa/4.0/" rel="nofollow">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a>.<a href="https://github.com/phileasdg/Graphical-Iteration-in-R"></a></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>AI: Contemporary uses and questions for Audiovisual Entertainment.</title>
        <author>
            <name>Phileas Dazeley-Gaist</name>
        </author>
        <link href="https://phileasdg.github.io/phileas-dazeley-gaist/ai-contemporary-uses-and-questions-for-audiovisual-entertainment/"/>
        <id>https://phileasdg.github.io/phileas-dazeley-gaist/ai-contemporary-uses-and-questions-for-audiovisual-entertainment/</id>
        <media:content url="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/12/GAN-video-2.png" medium="image" />
            <category term="Undergraduate work"/>

        <updated>2022-08-12T08:14:54-04:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/12/GAN-video-2.png" alt="" />
                    This short text discusses contemporary applications for AI (artificial intelligence) machine learning&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/12/GAN-video-2.png" class="type:primaryImage" alt="" /></p>
                <div class="page" title="Page 1">
<div class="layoutArea">
<div class="column">
<p>This short text discusses contemporary applications for AI (artificial intelligence) machine learning agents as well as AI agent behaviour in the production, distribution, and consumption of audiovisual media. In this context, it aims to raise questions about the implications of AI based task completion. </p>
<p>Note: I wrote this text for a course in Film Theory at College of the Atlantic taught by Professor Colin Capers in Spring 2020. A lot has changed in the field of AI since then, and although there now exist many new and more powerful approaches to using AI in Audiovisual Entertainment and New Media, these recent developments are not reflected in this short survey-essay. </p>
<h2>Introduction</h2>
<div class="page" title="Page 1">
<div class="layoutArea">
<div class="column">
<p>In 2012, Google Brain researchers at Google’s semi-secret research laboratory, Google X successfully trained an artificial neural network to recognise cat images from a vast dataset of YouTube videos (<span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">John Markoff, ‘How Many Computers to Identify a Cat? 16,000’, The New York Times, 25 June 2012, sec. Technology, <a href="https://www.nytimes.com/2012/06/26/technology/in-a-big-network-of-computers-evidence-of- machine-learning.html">link 1</a></span>). <span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">At the time, this milestone in machine learning garnered wide mediatic coverage, notably from the New York Times and The Verge (</span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Ibid; Liat Clark, ‘Google’s Artificial Brain Learns to Find Cat Videos’, Wired, 26 June 2012, <a href="https://www.wired.com/2012/06/google-x-neural-network/">link 2</a></span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">). </span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Today, eight years later, image recognition technology is cheaper, more versatile and widely available than ever, in fact, it is now a standard feature on most modern mobile phones, digital cameras, and laptops at no specified cost to the end-user.</span></p>
<div class="page" title="Page 1">
<div class="layoutArea">
<div class="column">
<p>Image recognition is just one of the many implementations of AI systems in modern consumer electronics. We interact with AI constantly through electronic devices, knowingly and unknowingly as we go about our day-to-day lives. AIs process the images on our <span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">smartphone cameras (</span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Sam Byford, ‘How AI Is Changing Photography’, The Verge, 31 January 2019, <a href="https://www.theverge.com/2019/1/31/18203363/ai-artificial-intelligence-photography-google-photos-apple- huawei">link 3</a></span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">), </span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">model our tastes and consumer behaviours to better market products to us online (</span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Charles Taylor, ‘Can Artificial Intelligence Eliminate Consumer Privacy Concerns For Digital Advertisers?’, Forbes, accessed 4 June 2020, <a href="https://www.forbes.com/sites/charlesrtaylor/2019/07/29/can-artificial- intelligence-eliminate-consumer-privacy-concerns-for-digital-advertisers/">link 4</a></span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">), </span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">determine what media to recommend to us (</span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Joss Fong, ‘How Smart Is Today’s Artificial Intelligence?’, Vox, 19 December 2017, <a href="https://www.vox.com/videos/2017/12/19/16792294/artificial-intelligence-limits-of-ai">link 5</a></span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">), </span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">and fulfil many other tasks that simultaneously serve us and shape our behaviours.</span></p>
<div class="page" title="Page 2">
<div class="layoutArea">
<div class="column">
<p>The ever-increasing ubiquity of AI agents in our lives echoes the huge advancements in AI research and electronic hardware in the last decade. Most relevant to this exploration are advancements and discoveries in the field of machine learning that have led to significant changes in the way we make, consume, and think about audiovisual media. AI involvement in the production, distribution, and consumption (referred to from here on as PDC) of audiovisual media is growing as businesses, researchers, and enthusiasts train neural networks and provide them with appropriate interfaces to tackle PDC tasks. Provided it has access to the right interface, there exists an AI agent capable of carrying out every audiovisual media PDC task.</p>
<h2>Existing AI implementations for audiovisual media PDC</h2>
<p>While AI agents can be trained to perform any audiovisual media PDC task, the properties of the agent’s work output might differ widely from the output of a similarly instructed human worker. Generally, AI agent capabilities are measured by comparing the agent’s performance to a set of human-designed criteria. Against these criteria, AI’s fare very differently depending on their design and task. While some do very well, even occasionally <span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">surpassing human abilities altogether, others produce poor results. For the purposes of this text, AI agent performance is secondary to AI agent behaviour.</span></p>
<div class="page" title="Page 3">
<div class="layoutArea">
<div class="column">
<p>The following three sections of this text describe some notable examples of AI implementations in the production, distribution, and consumption of audiovisual content, supplemented with short descriptions and evaluations of their conduct and work output.</p>
<h3>Audiovisual media production</h3>
<h4>1) Benjamin: screenwriting, video editing and visual effects</h4>
<p>LSTM (long short-term memory), also known as Benjamin is an artificial recurrent neural network (<span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Annalee Newitz, ‘Movie Written by Algorithm Turns out to Be Hilarious and Intense’, Ars Technica, 6 September 2016, <a href="https://arstechnica.com/gaming/2016/06/an-ai-wrote-this-movie-and-its-strangely-moving/">link 6</a></span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">) </span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">partially credited for producing three short films: Sunspring (2016, starring Thomas Middleditch), It’s no game (2017, starring David Hasselhoff), and Zone Out (2018, starring Thomas Middleditch) (</span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">‘Films by Benjamin the A.I.’, Therefore Films, accessed 5 June 2020, <a href="http://www.thereforefilms.com/films- by-benjamin-the-ai.html">link 7</a></span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">). </span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Benjamin is credited for generating the Sunspring screenplay (</span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Newitz, ‘Movie Written by Algorithm Turns out to Be Hilarious and Intense’)</span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">, co-authoring the screenplay of It’s no game (</span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Annalee Newitz, ‘An AI Wrote All of David Hasselhoff’s Lines in This Bizarre Short Film’, Ars Technica, 25 April 2017, <a href="https://arstechnica.com/gaming/2017/04/an-ai-wrote-all-of-david-hasselhoffs-lines-in-this- demented-short-film/">link 8</a>), </span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">and for writing and editing Zone Out (</span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">‘AI Made a Movie With a “Silicon Valley” Star—and the Results Are Horrifyingly Encouraging’, Wired, accessed 5 June 2020, <a href="https://www.wired.com/story/ai-filmmaker-zone-out/">link 9</a>). </span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Benjamin’s films are freely available for viewing online at <a href="www.thereforefilms.com">thereforefilms.com</a>.</span></p>
<div class="page" title="Page 3">
<div class="layoutArea">
<div class="column">
<p>For each film, the AI agent was trained on different datasets:</p>
<ul>
<li>To write Sunspring, writer, artist and data scientist Ross Goodwin fed it dozens (a small number for an AI dataset) of sci-fi movie scripts, resulting in absurd and ominous sci-fi-esque dialogues (Newitz, ‘Movie Written by Algorithm Turns out to Be Hilarious and Intense’.)</li>
<li>For It’s no game, Goodwin had Benjamin study David Hasselhoff shows to produce Hasselhoff’s lines. While the result is nonsensical, Hasselhoff seemed genuinely moved by the script. In an article by Annalee Newitz on Ars Technica, Hasselhoff reflects: “This AI really had a handle on what's going on in my life and it was strangely emotional” (Ibid).</li>
<li>To produce Zone Out, Goodwin trained Benjamin from a pool of films in the public domain (‘AI Made a Movie With a “Silicon Valley” Star—and the Results Are Horrifyingly Encouraging’<span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);"><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">). </span></span>The result is a semi-coherent absurdist black and white drama with actors deepfaked over shots from traditionally produced cinematic content (Deepfakes are an AI based video manipulation technique which maps faces from a reference database onto an image sequence<span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">).</span></li>
</ul>
<div class="page" title="Page 4">
<div class="layoutArea">
<div class="column">
<p>While Benjamin’s writing and editing often result in absurd dialogue and stories, its work demonstrates clear pattern recognition vis-à-vis oral and visual language in Film.</p>
<h4>2) Watson: film trailer video editing</h4>
<p>In 2016, 20th Century Fox partnered with IBM to produce the official film trailer for Morgan (2016) using Watson, IBM’s proprietary AI business platform (<span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">‘IBM Research Takes Watson to Hollywood with the First “Cognitive Movie Trailer”’, THINK Blog, 31 August 2016, </span><a href="https://www.ibm.com/blogs/think/2016/08/cognitive-movie-trailer/">link 10</a><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">)</span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">. </span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">The resulting trailer is blandly edited and generally unexciting, but it is also difficult to distinguish from many (presumably) human-directed trailers. The film flopped, and critics and audiences alike widely dismissed the film on its release.</span></p>
<div class="page" title="Page 4">
<div class="layoutArea">
<div class="column">
<h4>3) Stanford &amp; Adobe research: Computational Video Editing for Dialogue-Driven Scenes</h4>
<p>Computational Video Editing for Dialogue-Driven Scenes is a research paper co-authored by Mackenzie Leake, Abe Davis, Anh Truong, and Maneesh Agrawala (of Stanford University and Adobe Research). The article was published in July 2017 in the journal ACM Transactions on Graphics. It presents an AI-driven system for efficiently editing video of <span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">dialogue-driven scenes. The system employs film editing idioms to instruct the AI agent to edit according to defined parameters with remarkable success. The results, with regards to their respect of editing idioms, could easily be mistaken to have been edited by an experienced human video-editor.</span></p>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="page" title="Page 5">
<div class="layoutArea">
<div class="column">
<h4>4) GANs: image manipulation and image sequence generation</h4>
<p>Generative Adversarial Networks (usually abbreviated to GANs) are machine learning frameworks which employ two AI networks (often the same agent twice) competing to improve an AI’s work output for a given task (<span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Generative Adversarial Networks (GANs) - Computerphile, accessed 5 June 2020, <a href="https://www.youtube.com/watch?v=Sw9r8CL98N0">link 11</a></span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">). </span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">In this competition, one network acts as a generator, outputting information, while the other acts as a discriminator, evaluating the work submitted by the generator. The discriminator’s evaluation is then fed back into the generator as a score, allowing the generator to adjust its output and improve its work (Ibid).</span></p>
<div class="page" title="Page 5">
<div class="layoutArea">
<div class="column">
<p>GANs have shown great capacity to manipulate and generate new images and image sequences from described attributes. Manipulating Attributes of Natural Scenes via Hallucination, a research paper published in February 2020 in the journal ACM Transactions on Graphics and co-authored by Levent Karacan, Zeynep Akata, Aykut Erdem, and Erkut Erdem explores the generation and manipulation of nature scenes through a process of neural network image hallucination (<span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Levent Karacan et al., ‘Manipulating Attributes of Natural Scenes via Hallucination’, ACM Transactions on Graphics 39, no. 1 (11 February 2020): 1–17, </span><a href="https://doi.org/10.1145/3368312">link 12</a><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">). </span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">The results (example image below) are astonishing.</span></p>
<figure class="post__image" ><img loading="lazy" src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/12/GAN.png" alt="" width="1412" height="528" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/12/responsive/GAN-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/12/responsive/GAN-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/12/responsive/GAN-md.png 768w">
<figcaption >
<div class="page" title="Page 6">
<div class="layoutArea">
<div class="column">
<p>GAN image manipulation example (<span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Levent Karacan et al., ‘Manipulating Attributes of Natural Scenes via Hallucination’, ACM Transactions on Graphics 39, no. 1 (11 February 2020): 1–17, </span><a href="https://doi.org/10.1145/3368312" style="font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">https://doi.org/10.1145/3368312</a><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">)</span></p>
</div>
</div>
</div>
</figcaption>
</figure>
<div class="page" title="Page 6">
<div class="layoutArea">
<div class="column">
<p>Another paper, Adversarial Video Generation on Complex Datasets, published by Google DeepMind researchers Aidan Clark, Jeff Donahue, and Karen Simonyan in 2019, demonstrates excellent potential for GAN based video generation. In this paper, through the GAN framework, researchers successfully trained an AI agent to produce 256x256 pixel resolution videos of a duration of 48 frames (<span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Aidan Clark, Jeff Donahue, and Karen Simonyan, ‘Adversarial Video Generation on Complex Datasets’, 15 July 2019, </span><a href="https://arxiv.org/abs/1907.06571v2">link 13</a><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">). Their results (example image below) are promising.</span></p>
<figure class="post__image"><img loading="lazy"  src="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/12/GAN-video.png" alt="" width="1364" height="510" sizes="(max-width: 48em) 100vw, 100vw" srcset="https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/12/responsive/GAN-video-xs.png 300w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/12/responsive/GAN-video-sm.png 480w ,https://phileasdg.github.io/phileas-dazeley-gaist/media/posts/12/responsive/GAN-video-md.png 768w"><figcaption>GAN video generation example (<span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Aidan Clark, Jeff Donahue, and Karen Simonyan, ‘Adversarial Video Generation on Complex Datasets’, 15 July 2019, </span><a href="https://arxiv.org/abs/1907.06571v2" style="font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">https://arxiv.org/abs/1907.06571v2</a><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">)</span></figcaption></figure>
<div class="page" title="Page 7">
<div class="layoutArea">
<div class="column">
<h4>Tacotron: voice modelling and speech synthesis</h4>
<div class="page" title="Page 7">
<div class="layoutArea">
<div class="column">
<p>In Natural TTS Synthesis by Conditioning WaveNet on Mel Spectrogram Predictions, a computation and language paper published by researchers at Google and the University of California, Berkeley first published in December 2017 researchers describe Tacotron 2: “a neural network architecture for speech synthesis directly from text” (<span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Jonathan Shen et al., ‘Natural TTS Synthesis by Conditioning WaveNet on Mel Spectrogram Predictions’, 16 December 2017, <a href="https://arxiv.org/abs/1712.05884v2">link 14</a></span>). <span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">In a post to the Google AI Blog (ai.googleblog.com) from around the same time, software engineers Jonathan Shen and Ruoming Pang summarise the systems’ ability to generate human-like speech from text using embedded voice models (</span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">‘Tacotron 2: Generating Human-like Speech from Text’, Google AI Blog (blog), accessed 5 June 2020, </span><a href="http://ai.googleblog.com/2017/12/tacotron-2-generating-human-like-speech.html">link 15</a><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">). </span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">The results are often incredibly impressive, although the system has difficulty accurately synthesising words where the tonal accent position is ambiguous (</span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Shen et al., ‘Natural TTS Synthesis by Conditioning WaveNet on Mel Spectrogram Predictions’</span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">).</span></p>
<figure class="post__video"><iframe loading="lazy" width="560" height="314" src="https://www.youtube.com/embed/ZPeu-ByEi0s?feature=oembed" allowfullscreen="allowfullscreen" data-mce-fragment="1"></iframe></figure>
<div class="page" title="Page 8">
<div class="layoutArea">
<div class="column">
<h4>MuseNet &amp; FlowMachines: music generation</h4>
<div class="page" title="Page 8">
<div class="layoutArea">
<div class="column">
<p>MuseNet is a deep neural network developed by OpenAI that can generate four-minute-long musical compositions for a selection of ten instruments. By training the system on hundreds of thousands of MIDI files, researchers have taught the network to recognise different patterns of musical styles, harmony, and rhythms (<span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">‘MuseNet’, OpenAI, 25 April 2019, </span><a href="https://openai.com/blog/musenet/">link 16</a><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">). </span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">MuseNet can generate music from a reference, from style, or rhythm prompts, or without any input whatsoever (Ibid). Its output could easily be mistaken for human work. MuseNet music samples are available on the OpenAI website, openai.com.</span></p>
<div class="page" title="Page 8">
<div class="layoutArea">
<div class="column">
<p>Much like MuseNet, FlowMachines is a music generation neural network. Developed by scientists at Sony CSL Paris and Pierre and Marie Curie University (UPMC), the program garnered much attention in 2016 for composing two music pieces now freely available to listen to on YouTube (<span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Mr Shadow: A Song Composed by Artificial Intelligence, accessed 5 June 2020, </span><a href="https://www.youtube.com/watch?v=lcGYEXJqun8">link 17</a><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">). </span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">FlowMachines creates music much more complex than MuseNet, but its music generation is more recognisably machine-like than its OpenAI counterpart (example song linked below).</span></p>
<figure class="post__video"><iframe loading="lazy" width="560" height="314" src="https://www.youtube.com/embed/lcGYEXJqun8?feature=oembed" allowfullscreen="allowfullscreen" data-mce-fragment="1"></iframe></figure>
<div class="page" title="Page 9">
<div class="layoutArea">
<div class="column">
<h3>Audiovisual media distribution:</h3>
<div class="page" title="Page 9">
<div class="layoutArea">
<div class="column">
<h4>Targeted recommendations and social network advertising</h4>
<div class="page" title="Page 9">
<div class="layoutArea">
<div class="column">
<p>Many online music and video streaming services use machine learning to generate media recommendations for clients algorithmically. Among others, this is the case for Netflix, whose recommendation system analyses viewer data in combination with the characteristics of viewed content (storyline, character makeup, genre, mood, etc.) (<span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Libby Plummer, ‘This Is How Netflix’s Top-Secret Recommendation System Works’, Wired UK, 22 August 2017, </span><a href="https://www.wired.co.uk/article/how-do-netflixs-algorithms-work-machine-learning-helps-to-predict-what-viewers-will-like">link 18</a><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">). </span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Similarly, most social media platforms farm user personal information to generate elaborate consumer profiles through big data, allowing them to better target users through advertisements (</span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">Kalev Leetaru, ‘Social Media Companies Collect So Much Data Even They Can’t Remember All The Ways They Surveil Us’, Forbes, accessed 5 June 2020, <a href="https://www.forbes.com/sites/kalevleetaru/2018/10/25/social-media-companies-collect-so-much-data-even-they-cant-remember-all-the-ways-they-surveil-us/">link 19</a></span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">).</span></p>
<div class="page" title="Page 9">
<div class="layoutArea">
<div class="column">
<h3>Audiovisual media consumption</h3>
<div class="page" title="Page 9">
<div class="layoutArea">
<div class="column">
<p>AI agents that produce images and sound learn through datasets of the same audio and visual material. This applies to all AI agent examples described under the Audiovisual media production section of this paper. Artificial neural networks far outpace humans at consuming audiovisual content, but the implications of content reading are different for human and AIs. While AI’s may be able to process content much faster and more efficiently than human beings, they do not currently possess any means to understand the content that they consume. Nonetheless, AI systems often surpass humans at extracting specific information from content.</p>
<div class="page" title="Page 9">
<div class="layoutArea">
<div class="column">
<h4>Watch, Listen, Attend and Spell: AI audiovisual media information extraction</h4>
<div class="page" title="Page 9">
<div class="layoutArea">
<div class="column">
<p>Watch, Listen, Attend and Spell (abbreviated as WLAS), released in 2016 is a machine learning algorithm developed by researches at Google DeepMind to lip-read human beings on video. The program, trained on news footage from the BBC, can read and caption video <span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">content containing a visible speaker with 46.8 per cent accuracy, 34.4 per cent higher than human professionals (</span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">James Vincent, ‘Google’s AI Can Now Lip Read Better than Humans after Watching Thousands of Hours of TV’, The Verge, 24 November 2016, <a href="https://www.theverge.com/2016/11/24/13740798/google-deepmind-ai-lip-reading-tv">link 20</a></span><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">).</span></p>
<div class="page" title="Page 10">
<div class="layoutArea">
<div class="column">
<h2>Concluding statement</h2>
<p>What is a human task? Historically, what has fallen within the umbrella are tasks that human beings could not delegate to other animals or machines. As AI agents continue to improve, how will our current understanding of what is or is not a human task change? As AI agents develop, the roles they play in our day-to-day lives will continue to expand. Which tasks will AIs assist in, and which will they take over? It is still too early to tell. Despite the impressive abilities of some AI agents, it seems unlikely that generalised AI involvement in audiovisual media PDC is around the corner. Perhaps it is, but then again, probably not.</p>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<p> </p>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
            ]]>
        </content>
    </entry>
</feed>
